*&---------------------------------------------------------------------*
*& Report ZSTATUS
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZSTATUS.
TABLES: ZINW_T_HDR,ZINW_T_ITEM,ZINW_T_STATUS.
TYPE-POOLS SLIS.

SELECTION-SCREEN: BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS: S_ERDATE FOR ZINW_T_HDR-ERDATE MODIF ID M01.
PARAMETERS:  MONTH(10) AS LISTBOX VISIBLE LENGTH 15 MODIF ID M02.
PARAMETERS: YEAR  TYPE CHAR4.                            "DEFAULT 'X' USER-COMMAND UCOMM.
SELECTION-SCREEN: END OF BLOCK B1.


TYPES: BEGIN OF TY_ZINW_T_HDR,
         QR_CODE  TYPE ZQR_CODE,
         INWD_DOC TYPE ZINWD_DOC,
         EBELN    TYPE EBELN,
         LIFNR    TYPE ELIFN,
         LR_NO    TYPE ZLR,
         TOTAL    TYPE ZSEL_TOATL,
         NET_AMT  TYPE BWERT,
         ERDATE   TYPE ERDAT,
         STATUS   TYPE ZSTATUS,
       END OF TY_ZINW_T_HDR  ,

       BEGIN OF TY_ZINW_T_ITEM,
         QR_CODE TYPE ZQR_CODE,
         EBELN   TYPE EBELN,
         EBELP   TYPE EBELP,
         MENGE_P   TYPE ZMENGE_P,
         KBETR   TYPE KBETR,
       END OF TY_ZINW_T_ITEM,

       BEGIN OF TY_ZINW_T_STATUS,
         INWD_DOC TYPE ZINWD_DOC,
         QR_CODE  TYPE ZQR_CODE,
         STATUS_FIELD TYPE ZSTATUS_FIELD,
         STATUS_VALUE TYPE ZSTATUS_VALUE,
         DESCRIPTION TYPE ZDESCRIPTION,
         CREATED_DATE TYPE ERDAT,
       END OF TY_ZINW_T_STATUS.

DATA: IT_ZINW_T_HDR  TYPE TABLE OF TY_ZINW_T_HDR,
      WA_ZINW_T_HDR  TYPE  TY_ZINW_T_HDR,
      IT_ZINW_T_HDR1 TYPE TABLE OF ZINW_T_HDR,
      WA_ZINW_T_HDR1 TYPE ZINW_T_HDR,
      IT_ZINW_T_ITEM TYPE TABLE OF TY_ZINW_T_ITEM,
      WA_ZINW_T_ITEM TYPE TY_ZINW_T_ITEM,
      IT_ZINW_T_STATUS TYPE TABLE OF TY_ZINW_T_STATUS,
      WA_ZINW_T_STATUS TYPE TY_ZINW_T_STATUS,
      IT_FINAL       TYPE TABLE OF ZFINAL_STATUS,
      IT_FINAL1      TYPE TABLE OF ZFINAL_STATUS,
      WA_FINAL       TYPE ZFINAL_STATUS,
      WA_FINAL1      TYPE ZFINAL_STATUS.

DATA: IT_FCAT TYPE SLIS_T_FIELDCAT_ALV,
      WA_FCAT TYPE SLIS_FIELDCAT_ALV.
DATA: IT_EVENT     TYPE SLIS_T_EVENT,
      WA_EVENT     LIKE LINE OF IT_EVENT,
      WA_LAYOUT    TYPE SLIS_LAYOUT_ALV,
      LV_DATE-LOW  TYPE CHAR10,
      LV_DATE-HIGH TYPE CHAR10.

DATA : SVALUE TYPE ZINW_T_STATUS-STATUS_VALUE .

DATA: IT_FCAT1   TYPE SLIS_T_FIELDCAT_ALV,
      WA_FCAT1   TYPE SLIS_FIELDCAT_ALV,
      IT_EVENT1  TYPE SLIS_T_EVENT,
      WA_EVENT1  LIKE LINE OF IT_EVENT1,
      WA_LAYOUT1 TYPE SLIS_LAYOUT_ALV.

CONCATENATE YEAR MONTH '01' INTO LV_DATE-LOW." SEPARATED BY '.'.
CONCATENATE YEAR MONTH '31' INTO LV_DATE-HIGH." SEPARATED BY '.'.

DATA: NAME TYPE VRM_ID,
      LIST TYPE VRM_VALUES,
      VALUE LIKE LINE OF LIST.

AT SELECTION-SCREEN OUTPUT .
*LOOP AT SCREEN.
*IF MONTH = 'X'.
*IF SCREEN-GROUP1 = 'M01'.
*SCREEN-INVISIBLE = 1.
*MODIFY SCREEN.
*ENDIF.
*ENDIF.
*ENDLOOP.

NAME = 'MONTH'.

VALUE-KEY = '01'.
VALUE-TEXT = 'January'.
APPEND VALUE TO LIST.

VALUE-KEY = '02'.
VALUE-TEXT = 'February'.
APPEND VALUE TO LIST.

VALUE-KEY = '03'.
VALUE-TEXT = 'March'.
APPEND VALUE TO LIST.

VALUE-KEY = '04'.
VALUE-TEXT = 'April'.
APPEND VALUE TO LIST.

VALUE-KEY = '05'.
VALUE-TEXT = 'May'.
APPEND VALUE TO LIST.

VALUE-KEY = '06'.
VALUE-TEXT = 'June'.
APPEND VALUE TO LIST.

VALUE-KEY = '07'.
VALUE-TEXT = 'July'.
APPEND VALUE TO LIST.

VALUE-KEY = '08'.
VALUE-TEXT = 'August'.
APPEND VALUE TO LIST.

VALUE-KEY = '09'.
VALUE-TEXT = 'September'.
APPEND VALUE TO LIST.

VALUE-KEY = '10'.
VALUE-TEXT = 'October'.
APPEND VALUE TO LIST.

VALUE-KEY = '11'.
VALUE-TEXT = 'November'.
APPEND VALUE TO LIST.

VALUE-KEY = '12'.
VALUE-TEXT = 'December'.
APPEND VALUE TO LIST.
CALL FUNCTION 'VRM_SET_VALUES'
  EXPORTING
    ID                    = NAME
    VALUES                = LIST
 EXCEPTIONS
   ID_ILLEGAL_NAME       = 1
   OTHERS                = 2
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.
START-OF-SELECTION.

SELECT QR_CODE
       INWD_DOC
       EBELN
       LIFNR
       LR_NO
       TOTAL
       NET_AMT
       ERDATE
       STATUS
       FROM ZINW_T_HDR INTO TABLE IT_ZINW_T_HDR WHERE ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH . "> lv_date-LOW AND ERDATE < lv_date-high.
*                                                      AND STATUS EQ '01'.
IF IT_ZINW_T_HDR IS NOT INITIAL.
  SELECT QR_CODE
       EBELN
       EBELP
       MENGE_P
       KBETR
       FROM ZINW_T_ITEM INTO TABLE IT_ZINW_T_ITEM FOR ALL ENTRIES IN IT_ZINW_T_HDR WHERE QR_CODE = IT_ZINW_T_HDR-QR_CODE
                                                                                         AND EBELN = IT_ZINW_T_HDR-EBELN.
  SELECT INWD_DOC
         QR_CODE
         STATUS_FIELD
         STATUS_VALUE
         DESCRIPTION
         CREATED_DATE
         FROM ZINW_T_STATUS INTO TABLE IT_ZINW_T_STATUS FOR ALL ENTRIES IN IT_ZINW_T_HDR WHERE INWD_DOC = IT_ZINW_T_HDR-INWD_DOC
                                                                                             AND QR_CODE = IT_ZINW_T_HDR-QR_CODE.
ENDIF.

SELECT COUNT( * ) INTO WA_FINAL-LV_ONE FROM ZINW_T_HDR WHERE STATUS GE '01' AND ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH.
SELECT COUNT( * ) INTO WA_FINAL-LV_TWO FROM ZINW_T_HDR WHERE STATUS GE '02' AND ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH.
SELECT COUNT( * ) INTO WA_FINAL-LV_THREE FROM ZINW_T_HDR WHERE STATUS GE '04' AND ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH.
SELECT COUNT( * ) INTO WA_FINAL-LV_FOUR FROM ZINW_T_HDR WHERE STATUS GE '05' AND ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH.
SELECT COUNT( * ) INTO WA_FINAL-LV_FIVE FROM ZINW_T_HDR WHERE STATUS GE '06' AND ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH.
SELECT COUNT( * ) INTO WA_FINAL-LV_SIX FROM ZINW_T_HDR WHERE STATUS GE '07' AND ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH.
SELECT COUNT( * ) INTO WA_FINAL-LV_SEVEN FROM ZINW_T_HDR WHERE STATUS GE '08' AND ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH.

APPEND WA_FINAL TO IT_FINAL .
CLEAR WA_FINAL.

WA_FCAT-COL_POS = 1.
WA_FCAT-OUTPUTLEN   = 10.
WA_FCAT-FIELDNAME = 'LV_ONE'.
WA_FCAT-SELTEXT_M = 'NO OF QRs'.
WA_FCAT-HOTSPOT = 'X'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

WA_FCAT-COL_POS = 2.
WA_FCAT-OUTPUTLEN   = 15.
WA_FCAT-FIELDNAME = 'LV_TWO'.
WA_FCAT-SELTEXT_M = 'NO OF GATES INs'.
WA_FCAT-HOTSPOT = 'X'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

WA_FCAT-COL_POS = 3.
WA_FCAT-OUTPUTLEN   = 12.
WA_FCAT-FIELDNAME = 'LV_THREE'.
WA_FCAT-SELTEXT_M = 'NO OF GRPOs'.
WA_FCAT-HOTSPOT = 'X'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

WA_FCAT-COL_POS = 4.
WA_FCAT-OUTPUTLEN   = 20.
WA_FCAT-FIELDNAME = 'LV_FOUR'.
WA_FCAT-SELTEXT_M = 'NO OF QRs COMPLETED'.
WA_FCAT-HOTSPOT = 'X'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

WA_FCAT-COL_POS = 5.
WA_FCAT-OUTPUTLEN   = 22.
WA_FCAT-FIELDNAME = 'LV_FIVE'.
WA_FCAT-SELTEXT_M = 'NO OF INVOICE CREATED'.
WA_FCAT-HOTSPOT = 'X'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

WA_FCAT-COL_POS = 6.
WA_FCAT-OUTPUTLEN   = 15.
WA_FCAT-FIELDNAME = 'LV_SIX'.
WA_FCAT-SELTEXT_M = 'NO OF PAYMENTS'.
WA_FCAT-HOTSPOT = 'X'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

WA_FCAT-COL_POS = 7.
WA_FCAT-OUTPUTLEN   = 22.
WA_FCAT-FIELDNAME = 'LV_SEVEN'.
WA_FCAT-SELTEXT_M = 'NO OF AUDITOR VERIFIED'.
WA_FCAT-HOTSPOT = 'X'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
  EXPORTING
    I_CALLBACK_PROGRAM      = SY-REPID
    I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
*   I_STRUCTURE_NAME        = 'ZFINAL_STATUS'
*   IS_LAYOUT               = WA_LAYOUT
    IT_FIELDCAT             = IT_FCAT[]
    I_DEFAULT               = 'X'
    I_SAVE                  = 'A'
  TABLES
    T_OUTTAB                = IT_FINAL
  EXCEPTIONS
    PROGRAM_ERROR           = 1
    OTHERS                  = 2.
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

FORM USER_COMMAND USING R_UCOMM TYPE SY-UCOMM RS_SELFIELD TYPE SLIS_SELFIELD.
  CASE R_UCOMM.
    WHEN '&IC1'.
      READ TABLE IT_FINAL INTO WA_FINAL INDEX RS_SELFIELD-TABINDEX.
*  BREAK MPATIL.
  DATA: LV_VAL(5) TYPE C.
  LV_VAL = RS_SELFIELD-VALUE.
*  BREAK MPATIL.
  SPLIT LV_VAL AT ',' INTO DATA(LV_LEFT) DATA(LV_RIGHT).
  CONCATENATE LV_LEFT LV_RIGHT INTO LV_VAL.

     IF LV_VAL  EQ WA_FINAL-LV_ONE.                                 "AND WA_ZINW_T_HDR-ERDATE = WA_ZINW_T_STATUS-CREATED_DATE.
       SVALUE = 'QR01'.
        SELECT QR_CODE
               INWD_DOC
               EBELN
               LIFNR
               LR_NO
               TOTAL
               NET_AMT
               ERDATE
               STATUS
               FROM ZINW_T_HDR INTO TABLE IT_ZINW_T_HDR WHERE ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH AND STATUS GE '01'.
     ELSEIF LV_VAL EQ WA_FINAL-LV_TWO. "AND ERDATE = S_ERDATE.
         SVALUE = 'QR02' .
       SELECT QR_CODE
               INWD_DOC
               EBELN
               LIFNR
               LR_NO
               TOTAL
               NET_AMT
               ERDATE
               STATUS
               FROM ZINW_T_HDR INTO TABLE IT_ZINW_T_HDR WHERE ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH AND STATUS GE '02'.

     ELSEIF LV_VAL EQ WA_FINAL-LV_THREE.
         SVALUE = 'QR04' .
        SELECT QR_CODE
               INWD_DOC
               EBELN
               LIFNR
               LR_NO
               TOTAL
               NET_AMT
               ERDATE
               STATUS
               FROM ZINW_T_HDR INTO TABLE IT_ZINW_T_HDR WHERE ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH AND STATUS GE '04'. "AND STATUS GE '04'.
      ELSEIF LV_VAL EQ WA_FINAL-LV_FOUR.
          SVALUE = 'QR05' .
        SELECT QR_CODE
               INWD_DOC
               EBELN
               LIFNR
               LR_NO
               TOTAL
               NET_AMT
               ERDATE
               STATUS
               FROM ZINW_T_HDR INTO TABLE IT_ZINW_T_HDR WHERE ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH AND STATUS GE '05'.
      ELSEIF LV_VAL EQ WA_FINAL-LV_FIVE.
          SVALUE = 'QR06' .
        SELECT QR_CODE
               INWD_DOC
               EBELN
               LIFNR
               LR_NO
               TOTAL
               NET_AMT
               ERDATE
               STATUS
               FROM ZINW_T_HDR INTO TABLE IT_ZINW_T_HDR WHERE ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH AND STATUS GE '06'.
     ELSEIF LV_VAL EQ WA_FINAL-LV_SIX.
         SVALUE = 'QR07' .
        SELECT QR_CODE
               INWD_DOC
               EBELN
               LIFNR
               LR_NO
               TOTAL
               NET_AMT
               ERDATE
               STATUS
               FROM ZINW_T_HDR INTO TABLE IT_ZINW_T_HDR WHERE ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH AND STATUS GE '07'.
       ELSEIF LV_VAL EQ WA_FINAL-LV_SEVEN.
           SVALUE = 'QR08' .
         SELECT QR_CODE
                INWD_DOC
                EBELN
                LIFNR
                LR_NO
                TOTAL
                NET_AMT
                ERDATE
                STATUS
                FROM ZINW_T_HDR INTO TABLE IT_ZINW_T_HDR WHERE ERDATE IN S_ERDATE AND ERDATE GE LV_DATE-LOW AND ERDATE LE LV_DATE-HIGH AND STATUS GE '08'.
        ENDIF.
*       WA_FINAL-STATUS = '01' .                               "WA_FINAL-STATUS  = '01' .
*      ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_TWO.            "ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_TWO.
*       WA_FINAL-STATUS = '02'.                               "WA_FINAL-STATUS = '02'.
*      ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_THREE .         "ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_THREE .
*        WA_FINAL-STATUS = '03'.                               "WA_FINAL-STATUS = '03'.
*        WA_FINAL-STATUS = '04'.                               "WA_FINAL-STATUS = '04'.
**  ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_THREE.
**    WA_FINAL-STATUS = '04'.
*      ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_FOUR.           "ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_FOUR.
*        WA_FINAL-STATUS = '05'.                               "WA_FINAL-STATUS = '05'.
*      ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_FIVE.           "ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_FIVE.
*        WA_FINAL-STATUS = '06'.                               "WA_FINAL-STATUS = '06'.
*      ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_SIX.            "ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_SIX.
*        WA_FINAL-STATUS = '07'.                               "WA_FINAL-STATUS = '07'.
*      ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_SEVEN.          "ELSEIF RS_SELFIELD-VALUE EQ WA_FINAL-LV_SEVEN.
*        WA_FINAL-STATUS = '08'.                                   "WA_FINAL-STATUS = '08'.
*      ENDIF.
*  ENDCASE.




IF IT_ZINW_T_HDR IS NOT INITIAL.
 SELECT QR_CODE
        EBELN
        EBELP
        MENGE_P
        KBETR
        FROM ZINW_T_ITEM INTO TABLE IT_ZINW_T_ITEM FOR ALL ENTRIES IN IT_ZINW_T_HDR WHERE QR_CODE = IT_ZINW_T_HDR-QR_CODE
                                                                                          AND EBELN = IT_ZINW_T_HDR-EBELN.

    SELECT INWD_DOC   ,
         QR_CODE      ,
         STATUS_FIELD ,
         STATUS_VALUE ,
         DESCRIPTION  ,
         CREATED_DATE
         FROM ZINW_T_STATUS INTO TABLE @DATA(GT_STATUSDT)
         FOR ALL ENTRIES IN @IT_ZINW_T_HDR WHERE INWD_DOC = @IT_ZINW_T_HDR-INWD_DOC
         AND QR_CODE = @IT_ZINW_T_HDR-QR_CODE AND STATUS_VALUE = @SVALUE.
                      .
LOOP AT GT_STATUSDT INTO DATA(GW_STATUS).
READ TABLE IT_ZINW_T_HDR INTO DATA(GW_HDR) WITH KEY INWD_DOC = GW_STATUS-INWD_DOC QR_CODE = GW_STATUS-QR_CODE.
IF SY-SUBRC IS INITIAL.
GW_HDR-ERDATE = GW_STATUS-CREATED_DATE .
MODIFY IT_ZINW_T_HDR FROM GW_HDR INDEX SY-TABIX .
ENDIF.
ENDLOOP.

      ENDIF.
      REFRESH IT_FINAL1.
*BREAK MPATIL.
LOOP AT IT_ZINW_T_HDR INTO WA_ZINW_T_HDR. "WHERE QR_CODE = WA_ZINW_T_ITEM-QR_CODE AND
                                                   "EBELN = WA_ZINW_T_ITEM-EBELN.
WA_FINAL1-INWD_DOC = WA_ZINW_T_HDR-INWD_DOC.
WA_FINAL1-LIFNR  = WA_ZINW_T_HDR-LIFNR  .
WA_FINAL1-LR_NO  = WA_ZINW_T_HDR-LR_NO  .
WA_FINAL1-TOTAL  = WA_ZINW_T_HDR-TOTAL  .
WA_FINAL1-NET_AMT  = WA_ZINW_T_HDR-NET_AMT  .
WA_FINAL1-ERDATE = WA_ZINW_T_HDR-ERDATE .
WA_FINAL1-STATUS = WA_ZINW_T_HDR-STATUS .

LOOP AT IT_ZINW_T_ITEM INTO WA_ZINW_T_ITEM WHERE QR_CODE = WA_ZINW_T_HDR-QR_CODE AND
                                                    EBELN = WA_ZINW_T_HDR-EBELN.
*IF SY-SUBRC = 0.
WA_FINAL1-QR_CODE = WA_ZINW_T_ITEM-QR_CODE.
WA_FINAL1-EBELN = WA_ZINW_T_ITEM-EBELN.
WA_FINAL1-EBELP = WA_ZINW_T_ITEM-EBELP.
WA_FINAL1-MENGE_P = WA_FINAL1-MENGE_P + WA_ZINW_T_ITEM-MENGE_P.
WA_FINAL1-KBETR = WA_ZINW_T_ITEM-KBETR.
*ENDIF.

READ TABLE IT_ZINW_T_STATUS INTO WA_ZINW_T_STATUS WITH KEY INWD_DOC = WA_ZINW_T_HDR-INWD_DOC
                                                            QR_CODE = WA_ZINW_T_HDR-QR_CODE.
IF SY-SUBRC = 0.
*WA_FINAL1-INWD_DOC = WA_ZINW_T_STATUS-INWD_DOC .
*WA_FINAL1-QR_CODE  = WA_ZINW_T_STATUS-QR_CODE .
WA_FINAL1-STATUS_FIELD = WA_ZINW_T_STATUS-STATUS_FIELD .
WA_FINAL1-STATUS_VALUE = WA_ZINW_T_STATUS-STATUS_VALUE .
WA_FINAL1-DESCRIPTION  = WA_ZINW_T_STATUS-DESCRIPTION  .
WA_FINAL1-CREATED_DATE = WA_ZINW_T_STATUS-CREATED_DATE .
ENDIF.

  ENDLOOP.
  APPEND WA_FINAL1 TO IT_FINAL1.
  CLEAR WA_FINAL1.
  ENDLOOP.

   RS_SELFIELD-REFRESH = 'X'.
   SORT IT_FINAL1 ASCENDING.
*   DELETE ADJACENT DUPLICATES FROM IT_FINAL1 COMPARING QR_CODE .

  REFRESH IT_FCAT1.

*  WA_FCAT1-COL_POS = 1.
*  WA_FCAT1-outputlen   = 18.
*  WA_FCAT1-FIELDNAME = 'qr_code'.
*  WA_FCAT1-SELTEXT_M = 'Qr Dode'.
*  APPEND WA_FCAT1 TO IT_FCAT1.
*  CLEAR WA_FCAT1.

  WA_FCAT1-COL_POS = 1.
  WA_FCAT1-OUTPUTLEN   = 15.
  WA_FCAT1-FIELDNAME = 'INWD_DOC'.
  WA_FCAT1-SELTEXT_M = 'Inward Document'.
  APPEND WA_FCAT1 TO IT_FCAT1.
  CLEAR WA_FCAT1.

  WA_FCAT1-COL_POS = 2.
  WA_FCAT1-FIELDNAME = 'ebeln'.
  WA_FCAT1-SELTEXT_M = 'PO Number'.
  APPEND WA_FCAT1 TO IT_FCAT1.
  CLEAR WA_FCAT1.

  WA_FCAT1-COL_POS = 3.
  WA_FCAT1-FIELDNAME = 'lifnr'.
  WA_FCAT1-SELTEXT_M = 'Vendor'.
  APPEND WA_FCAT1 TO IT_FCAT1.
  CLEAR WA_FCAT1.

  WA_FCAT1-COL_POS = 4.
  WA_FCAT1-FIELDNAME = 'menge_p'.
  WA_FCAT1-DO_SUM = 'X'.
  WA_FCAT1-SELTEXT_M = 'Quantity'.
  APPEND WA_FCAT1 TO IT_FCAT1.
  CLEAR WA_FCAT1.

  WA_FCAT1-COL_POS = 5.
  WA_FCAT1-FIELDNAME = 'NET_AMT'.
  WA_FCAT1-DO_SUM = 'X'.
  WA_FCAT1-SELTEXT_M = 'Net Value'.
  APPEND WA_FCAT1 TO IT_FCAT1.
  CLEAR WA_FCAT1.

  WA_FCAT1-COL_POS = 6.
  WA_FCAT1-FIELDNAME = 'lr_no'.
  WA_FCAT1-SELTEXT_M = 'LR No'.
  APPEND WA_FCAT1 TO IT_FCAT1.
  CLEAR WA_FCAT1.

  WA_FCAT1-COL_POS = 7.
  WA_FCAT1-OUTPUTLEN = 12.
  WA_FCAT1-FIELDNAME = 'erdate'.
  WA_FCAT1-SELTEXT_M = 'Created On'.
  APPEND WA_FCAT1 TO IT_FCAT1.
 CLEAR WA_FCAT1.
*ENDCASE.
* CATCH SYSTEM-EXCEPTIONS CONVT_NO_NUMBER = 5.
* DO.
*  ......
*  ......
* ENDDO.
*ENDCATCH.
*
*IF SY-SUBRC = 5.
* "handle your exceptions here
*ENDIF.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK  = ' '
*     I_BYPASSING_BUFFER = ' '
*     I_BUFFER_ACTIVE    = ' '
      I_CALLBACK_PROGRAM = SY-REPID
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME   =
*     I_BACKGROUND_ID    = ' '
*     I_GRID_TITLE       =
*     I_GRID_SETTINGS    =
*     IS_LAYOUT          = WA_LAYOUT1
      IT_FIELDCAT        = IT_FCAT1[]
*     IT_EXCLUDING       =
*     IT_SPECIAL_GROUPS  =
*     IT_SORT            =
*     IT_FILTER          =
*     IS_SEL_HIDE        =
*     I_DEFAULT          = 'X'
*     I_SAVE             = ' '
*     IS_VARIANT         =
*     IT_EVENTS          = IT_EVENT1
*     IT_EVENT_EXIT      =
*     IS_PRINT           =
*     IS_REPREP_ID       =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE  = 0
*     I_HTML_HEIGHT_TOP  = 0
*     I_HTML_HEIGHT_END  = 0
*     IT_ALV_GRAPHICS    =
*     IT_HYPERLINK       =
*     IT_ADD_FIELDCAT    =
*     IT_EXCEPT_QINFO    =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER           =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      T_OUTTAB           = IT_FINAL1
    EXCEPTIONS
      PROGRAM_ERROR      = 1
      OTHERS             = 2.
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

*ENDIF.
ENDCASE.
ENDFORM.
