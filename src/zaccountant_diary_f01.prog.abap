*&---------------------------------------------------------------------*
*& Include          ZACCOUNTANT_DIARY_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form GET_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM GET_DATA.

  DATA :
    R_DATE       TYPE RANGE OF SY-DATUM,
    LV_TO_DATE   TYPE SY-DATUM,
    LV_FROM_DATE TYPE SY-DATUM.

  CONSTANTS :
    C_I(1)  VALUE 'I',
    C_OP(2) VALUE 'BT'.

  IF  P_MONTH IS INITIAL AND P_YEAR IS INITIAL.
    MESSAGE S006(ZMSG_CLS) DISPLAY LIKE 'E'.
    LEAVE LIST-PROCESSING.
  ENDIF.
  DATA : LV_NUMBER_OF_DAYS TYPE T009B-BUTAG.

  CALL FUNCTION 'NUMBER_OF_DAYS_PER_MONTH_GET'
    EXPORTING
      PAR_MONTH = P_MONTH
      PAR_YEAR  = P_YEAR
    IMPORTING
      PAR_DAYS  = LV_NUMBER_OF_DAYS.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*     WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  LV_TO_DATE = P_YEAR && P_MONTH && LV_NUMBER_OF_DAYS.
  LV_FROM_DATE =  LV_TO_DATE - 212.
  APPEND VALUE #( SIGN = C_I OPTION = C_OP LOW = LV_FROM_DATE HIGH = LV_TO_DATE ) TO R_DATE.
*  SELECT
*    EKBE~EBELN,
*    EKBE~EBELP,
*    EKBE~BEWTP,
*    EKBE~BELNR,
*    EKBE~GJAHR,
*    EKBE~BUDAT ,
*    EKKO~BSART ,
*    EKKO~LOEKZ ,
*    EKKO~AEDAT ,
*    EKKO~LIFNR ,
*    EKKO~WAERS ,
*    EKKO~ZTERM ,
*    EKKO~ZBD1T ,
*    ZINW_T_HDR~QR_CODE,
*    ZINW_T_HDR~NAME1,
*    ZINW_T_HDR~STATUS,
*    ZINW_T_HDR~SOE ,
*    ZINW_T_HDR~MBLNR_103 ,
*    ZINW_T_HDR~MBLNR ,
*    ZINW_T_HDR~INWD_DOC ,
*    ZINW_T_ITEM~MATNR ,
*    ZINW_T_ITEM~MATKL ,
*    ZINW_T_ITEM~NETPR_P ,
*    ZINW_T_ITEM~NETWR_P + ZINW_T_ITEM~NETPR_GP AS NETWR_P ,
*    ZINW_T_ITEM~NETPR_GP,
*    ZINW_T_ITEM~MENGE_P,
*    EKBE~BUDAT AS DUE_DATE
*    INTO TABLE @DATA(GT_DATA_T)
*    FROM  EKBE AS EKBE
*    INNER JOIN ZINW_T_HDR AS ZINW_T_HDR ON EKBE~BELNR = ZINW_T_HDR~MBLNR
*    INNER JOIN ZINW_T_ITEM AS ZINW_T_ITEM ON ZINW_T_ITEM~QR_CODE = ZINW_T_HDR~QR_CODE
*    INNER JOIN EKKO AS EKKO ON EKKO~EBELN = ZINW_T_HDR~EBELN
**    INNER JOIN EKPO AS EKPO ON EKBE~EBELN = EKPO~EBELN AND  EKBE~EBELP = EKPO~EBELP
*    WHERE  EKKO~BSART IN ( 'ZLOP' , 'ZOSP' , 'ZTAT' )
*    AND  EKBE~EBELN = '4600001540'
*    AND ZINW_T_HDR~SOE <> ' ' AND EKBE~BUDAT IN @R_DATE AND EKKO~LOEKZ <> @C_X AND EKBE~BEWTP IN ( 'Q' , 'E' ) AND EKBE~BWART IN ( '107' , '101', ' ' ) .
  BREAK BREDDY.
  SELECT
    EKBE~EBELN,
    EKBE~EBELP,
    EKBE~BEWTP,
    EKBE~BWART,
    EKBE~MENGE,
    EKBE~BELNR,
    EKBE~GJAHR,
    EKBE~BUDAT,
    EKBE~LFBNR,
    EKKO~BSART,
    EKKO~LOEKZ,
    EKKO~AEDAT,
    EKKO~LIFNR,
    EKKO~WAERS,
    EKKO~ZTERM,
    EKKO~ZBD1T,
    ZINW_T_HDR~QR_CODE,
    ZINW_T_HDR~NAME1,
    ZINW_T_HDR~STATUS,
    ZINW_T_HDR~SOE ,
    ZINW_T_HDR~MBLNR_103 ,
    ZINW_T_HDR~MBLNR ,
    ZINW_T_HDR~INWD_DOC ,
    ZINW_T_ITEM~MATNR ,
    ZINW_T_ITEM~MATKL ,
    ZINW_T_ITEM~NETPR_P ,
    ZINW_T_ITEM~NETWR_P + ZINW_T_ITEM~NETPR_GP AS NETWR_P ,
    ZINW_T_ITEM~NETPR_GP,
    ZINW_T_ITEM~MENGE_P,
    EKBE~BUDAT AS DUE_DATE
    INTO TABLE @GT_DATA
    FROM  EKBE AS EKBE
    INNER JOIN ZINW_T_HDR AS ZINW_T_HDR ON EKBE~BELNR = ZINW_T_HDR~MBLNR
    INNER JOIN ZINW_T_ITEM AS ZINW_T_ITEM ON ZINW_T_ITEM~QR_CODE = ZINW_T_HDR~QR_CODE AND ZINW_T_ITEM~EBELN = EKBE~EBELN AND ZINW_T_ITEM~EBELP = EKBE~EBELP
    INNER JOIN EKKO AS EKKO ON EKKO~EBELN = ZINW_T_HDR~EBELN
    WHERE  EKKO~BSART IN ( 'ZLOP' , 'ZOSP' , 'ZTAT' )
*    WHERE  EKKO~BSART IN ( 'NB' , 'ZTSR' )
      AND EKBE~EBELN = '4500000550'
    AND ZINW_T_HDR~SOE <> ' ' AND EKBE~BUDAT IN @R_DATE AND EKKO~LOEKZ <> @C_X AND EKBE~BEWTP = 'E' AND EKBE~BWART IN ( '109' , '101', ' ' ).

*  SELECT
*    EKBE~EBELN,
*    EKBE~EBELP,
*    EKBE~BEWTP,
*    EKBE~BWART,
*    EKBE~MENGE,
*    EKBE~BELNR,
*    EKBE~GJAHR,
*    EKBE~BUDAT,
*    EKBE~LFBNR,
*    EKBE~DMBTR,
*    EKKO~BSART,
*    EKKO~LOEKZ,
*    EKKO~AEDAT,
*    EKKO~LIFNR,
*    EKKO~WAERS,
*    EKKO~ZTERM,
*    EKKO~ZBD1T,
*    MSEG~MBLNR,
*    EKBE~BUDAT AS DUE_DATE
*    INTO TABLE @GT_DATA
*    FROM  EKBE AS EKBE
*    INNER JOIN EKKO AS EKKO ON EKBE~EBELN = EKKO~EBELN
*    INNER JOIN EKPO AS EKPO ON EKBE~EBELN = EKKO~EBELN
*    INNER JOIN MSEG AS MSEG ON MSEG~MBLNR = EKBE~BELNR
*    WHERE EKKO~BSART IN ('NB' , 'ZTSR')
*    AND EKBE~BUDAT IN @R_DATE AND EKKO~LOEKZ <> @C_X AND EKBE~BEWTP = 'E' AND EKBE~BWART IN ( '101' ).


*
*  SORT GT_DATA BY MBLNR EBELN MATNR.
*  DELETE ADJACENT DUPLICATES FROM GT_DATA COMPARING MBLNR EBELN MATNR.
*  DELETE GT_DATA WHERE MBLNR <> '5000000836'.
*** For Calculating Due Date
  IF SY-SUBRC = 0 AND GT_DATA IS NOT INITIAL.
    LOOP AT GT_DATA ASSIGNING FIELD-SYMBOL(<LS_DATA>).
      <LS_DATA>-DUE_DATE = <LS_DATA>-BUDAT +  <LS_DATA>-ZBD1T.
    ENDLOOP.
  ENDIF.
  DELETE GT_DATA WHERE DUE_DATE GT LV_TO_DATE.
  IF GT_DATA IS INITIAL.
    MESSAGE | No Payment pending for month  { P_MONTH } { P_YEAR } | TYPE 'S' DISPLAY LIKE 'E'.
    LEAVE LIST-PROCESSING.
  ENDIF.

*** Invoice Records
  SELECT EKBE~EBELN,
  EKBE~EBELP,
  EKBE~BEWTP,
  EKBE~BELNR ,
  EKBE~GJAHR,
  EKBE~BUDAT,
  EKBE~LFBNR
     FROM EKBE INTO TABLE @DATA(GT_DATA_INV) FOR ALL ENTRIES IN @GT_DATA WHERE EBELN = @GT_DATA-EBELN AND EBELP = @GT_DATA-EBELP AND BEWTP = 'Q'.
*** For Date Wise
  DELETE GT_DATA_INV WHERE BEWTP <> 'Q'.

  LOOP AT GT_DATA_INV ASSIGNING FIELD-SYMBOL(<LS_DATA_INV>).
    LOOP AT GT_DATA ASSIGNING <LS_DATA> WHERE EBELN = <LS_DATA_INV>-EBELN AND EBELP = <LS_DATA_INV>-EBELP AND LFBNR = <LS_DATA_INV>-LFBNR.
      IF SY-SUBRC = 0.
***   Marking X to delete
        <LS_DATA>-DUE_DATE = C_X.
      ENDIF.
    ENDLOOP.
  ENDLOOP.

*** Deleting the Invoice Records
  DELETE GT_DATA WHERE DUE_DATE = C_X.
*** For Date Wise
  DATA(GT_DATA_DATE) = GT_DATA.
  SORT GT_DATA_DATE BY DUE_DATE.
  DELETE ADJACENT DUPLICATES FROM GT_DATA_DATE COMPARING DUE_DATE.

  DATA(LV_START_DATE) = P_YEAR && P_MONTH && '01'.
  REFRESH : GT_FINAL1.
  DO LV_NUMBER_OF_DAYS TIMES.
    IF SY-INDEX = 1.
      LOOP AT GT_DATA ASSIGNING <LS_DATA> WHERE DUE_DATE LE LV_START_DATE.
        ADD <LS_DATA>-NETWR_P TO GS_FINAL1-AMOUNT.
*        ADD <LS_DATA>-DMBTR TO GS_FINAL1-AMOUNT.

      ENDLOOP.
    ELSE.
      LOOP AT GT_DATA ASSIGNING <LS_DATA> WHERE DUE_DATE = LV_START_DATE.

        IF <LS_DATA>-BWART = '109'.
*        IF <LS_DATA>-BWART = '101'.
*          DATA(LV_AMOUNT) = ( <LS_DATA>-MENGE * <LS_DATA>-NETPR_P ) + ( ( <LS_DATA>-NETPR_GP / <LS_DATA>-MENGE_P ) * <LS_DATA>-MENGE ).
          DATA(LV_AMOUNT) =  ( <LS_DATA>-NETWR_P / <LS_DATA>-MENGE_P ) * <LS_DATA>-MENGE .
          ADD LV_AMOUNT TO GS_FINAL1-AMOUNT.
        ELSE.
          ADD <LS_DATA>-NETWR_P TO GS_FINAL1-AMOUNT.
        ENDIF.
      ENDLOOP.
    ENDIF.
*    LOOP AT GT_DATA ASSIGNING <LS_DATA> WHERE DUE_DATE LE LV_START_DATE.
*      IF <LS_DATA>-BWART = '101'.
*        ADD <LS_DATA>-DMBTR TO GS_FINAL1-AMOUNT.
*      ENDIF.
*    ENDLOOP.

    GS_FINAL1-SLNO = SY-INDEX.
*    GS_FINAL1-SLNO = SY-TABIX.
    GS_FINAL1-DATE = LV_START_DATE+6(2) && '.' && LV_START_DATE+4(2) && '.' && LV_START_DATE+0(4).
    GS_FINAL1-CURRENCY = 'INR'.
    APPEND GS_FINAL1 TO GT_FINAL1.
    CLEAR : GS_FINAL1.
    LV_START_DATE = LV_START_DATE + 1.
  ENDDO.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form DISPLAY_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DISPLAY_DATA.
*** Field Catlog
  DATA:
    WLAYO	TYPE SLIS_LAYOUT_ALV,
    WFCAT TYPE SLIS_FIELDCAT_ALV,
    TFCAT TYPE SLIS_T_FIELDCAT_ALV,
    WVARI TYPE DISVARIANT.

  WVARI-REPORT    = SY-REPID.
  WVARI-USERNAME  = SY-UNAME.

  WLAYO-ZEBRA       = ABAP_TRUE.
  WLAYO-COLWIDTH_OPTIMIZE  = ABAP_TRUE.
*  WLAYO-    = 'D'.

*** Field Catlog
  REFRESH TFCAT.
  WFCAT-FIELDNAME   = 'SLNO'.
  WFCAT-SELTEXT_L   = 'SLNO'.
  WFCAT-OUTPUTLEN   = 4.
  WFCAT-REF_TABNAME = 'GT_FINAL1'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME   = 'DATE'.
  WFCAT-SELTEXT_L   = 'Due Date'.
  WFCAT-REF_TABNAME = 'GT_FINAL1'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME   = 'AMOUNT'.
  WFCAT-SELTEXT_L   = 'Amount'.
  WFCAT-REF_TABNAME = 'GT_FINAL1'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'CURRENCY'.
  WFCAT-SELTEXT_L = 'Currency'.
  WFCAT-REF_TABNAME = 'GT_FINAL1'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

*** Dispalying ALV Report

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM      = SY-REPID
      I_CALLBACK_USER_COMMAND = 'USER_COMMAND'
      IS_LAYOUT               = WLAYO
      IT_FIELDCAT             = TFCAT
      I_SAVE                  = 'U'
      IS_VARIANT              = WVARI
    TABLES
      T_OUTTAB                = GT_FINAL1
    EXCEPTIONS
      PROGRAM_ERROR           = 1
      OTHERS                  = 2.
  IF SY-SUBRC <> 0.
  ENDIF.
ENDFORM.

FORM USER_COMMAND USING  SY-UCOMM RS_SELFIELD TYPE SLIS_SELFIELD.
  CASE SY-UCOMM.
    WHEN '&IC1'.
      READ TABLE GT_FINAL1 ASSIGNING FIELD-SYMBOL(<LS_FINAL1>) INDEX RS_SELFIELD-TABINDEX.
      IF SY-SUBRC = 0.
        IF <LS_FINAL1>-AMOUNT > 0.
          PERFORM GET_PO_DATA USING <LS_FINAL1>-DATE RS_SELFIELD-TABINDEX.
        ENDIF.
      ENDIF.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form GET_PO_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM GET_PO_DATA USING I_DATE I_TABIX.
*** PO Data
  DATA :LV_COUNT TYPE INT4 VALUE 1.
  REFRESH : GT_FINAL2.
  DATA(LV_DATE) = I_DATE+6(4) && I_DATE+3(2) && I_DATE+0(2).
  IF I_TABIX = 1.
    LOOP AT GT_DATA ASSIGNING FIELD-SYMBOL(<LS_DATA>) WHERE DUE_DATE LE LV_DATE.
      GS_FINAL2-SLNO      = LV_COUNT.
      GS_FINAL2-DATE      = <LS_DATA>-DUE_DATE.
      GS_FINAL2-CURRENCY  = 'INR'.
      GS_FINAL2-EBELN     = <LS_DATA>-EBELN.
      GS_FINAL2-EBELP     = <LS_DATA>-EBELP.
      GS_FINAL2-WAERS     = <LS_DATA>-WAERS.
      GS_FINAL2-LIFNR     = <LS_DATA>-LIFNR.
      GS_FINAL2-NAME1     = <LS_DATA>-NAME1.
      GS_FINAL2-GRPO_NO   = <LS_DATA>-MBLNR.
      GS_FINAL2-MATKL     = <LS_DATA>-MATKL.
      GS_FINAL2-AEDAT     = <LS_DATA>-AEDAT.
      GS_FINAL2-INWD_DOC  = <LS_DATA>-INWD_DOC.
      GS_FINAL2-QR_CODE   = <LS_DATA>-QR_CODE.

      IF <LS_DATA>-BWART = '101'.
        GS_FINAL2-AMOUNT =  ( <LS_DATA>-NETWR_P / <LS_DATA>-MENGE_P ) * <LS_DATA>-MENGE .
*        GS_FINAL2-AMOUNT =   <LS_DATA>-DMBTR * <LS_DATA>-MENGE .
      ELSE.
        GS_FINAL2-AMOUNT = <LS_DATA>-NETWR_P.
*        GS_FINAL2-AMOUNT = <LS_DATA>-DMBTR.
      ENDIF.

      APPEND GS_FINAL2 TO GT_FINAL2.
      CLEAR : GS_FINAL2.
      LV_COUNT = LV_COUNT + 1.
    ENDLOOP.
  ELSE.
    LOOP AT GT_DATA ASSIGNING <LS_DATA> WHERE DUE_DATE = LV_DATE.
      GS_FINAL2-SLNO      = LV_COUNT.
      GS_FINAL2-DATE      = <LS_DATA>-DUE_DATE.
      GS_FINAL2-AMOUNT    = <LS_DATA>-NETWR_P.
      GS_FINAL2-CURRENCY  = 'INR'.
      GS_FINAL2-EBELN     = <LS_DATA>-EBELN.
      GS_FINAL2-EBELP     = <LS_DATA>-EBELP.
      GS_FINAL2-WAERS     = <LS_DATA>-WAERS.
      GS_FINAL2-LIFNR     = <LS_DATA>-LIFNR.
      GS_FINAL2-NAME1     = <LS_DATA>-NAME1.
      GS_FINAL2-GRPO_NO   = <LS_DATA>-MBLNR.
      GS_FINAL2-MATKL     = <LS_DATA>-MATKL.
      GS_FINAL2-AEDAT     = <LS_DATA>-AEDAT.
      GS_FINAL2-INWD_DOC  = <LS_DATA>-INWD_DOC.
      GS_FINAL2-QR_CODE   = <LS_DATA>-QR_CODE.

      IF <LS_DATA>-BWART = '101'.
        GS_FINAL2-AMOUNT =  ( <LS_DATA>-NETWR_P / <LS_DATA>-MENGE_P ) * <LS_DATA>-MENGE.
*        GS_FINAL2-AMOUNT =   <LS_DATA>-DMBTR   * <LS_DATA>-MENGE.
      ELSE.
        GS_FINAL2-AMOUNT = <LS_DATA>-NETWR_P.
      ENDIF.
      APPEND GS_FINAL2 TO GT_FINAL2.
      CLEAR : GS_FINAL2.
      LV_COUNT = LV_COUNT + 1.
    ENDLOOP.
  ENDIF.

*** Field Catlog
  DATA:
    WLAYO	TYPE SLIS_LAYOUT_ALV,
    WFCAT TYPE SLIS_FIELDCAT_ALV,
    TFCAT TYPE SLIS_T_FIELDCAT_ALV,
    WVARI TYPE DISVARIANT.

  WVARI-REPORT    = SY-REPID.
  WVARI-USERNAME  = SY-UNAME.

  WLAYO-ZEBRA       = ABAP_TRUE.
  WLAYO-COLWIDTH_OPTIMIZE  = ABAP_TRUE.
*  WLAYO-    = 'D'.

*** Field Catlog
  REFRESH TFCAT.
  WFCAT-FIELDNAME = 'SLNO'.
  WFCAT-SELTEXT_L = 'SLNO'.
  WFCAT-OUTPUTLEN = 4.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'DATE'.
  WFCAT-SELTEXT_L = 'Due Date'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'LIFNR'.
  WFCAT-SELTEXT_L = 'Vendor'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'NAME1'.
  WFCAT-SELTEXT_L = 'Vendor Name'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'EBELN'.
  WFCAT-SELTEXT_L = 'PO'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'AEDAT'.
  WFCAT-SELTEXT_L = 'Doc Date'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'INWD_DOC'.
  WFCAT-SELTEXT_L = 'Inward Document'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

*  WFCAT-FIELDNAME = 'REC_DATE'.
*  WFCAT-SELTEXT_L = 'Received Date'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
*  APPEND WFCAT TO TFCAT.
*  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'GRPO_NO'.
  WFCAT-SELTEXT_L = 'GRPO No'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'MATKL'.
  WFCAT-SELTEXT_L = 'Material Group'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'AMOUNT'.
  WFCAT-SELTEXT_L = 'Amount'.
  WFCAT-TABNAME = 'GT_FINAL2'.
  WFCAT-REF_FIELDNAME = 'NETWR'.
  WFCAT-DO_SUM = 'X'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.

  WFCAT-FIELDNAME = 'CURRENCY'.
  WFCAT-SELTEXT_L = 'Currency'.
*  WFCAT-REF_TABNAME = 'GT_FINAL2'.
  APPEND WFCAT TO TFCAT.
  CLEAR WFCAT.
***  Diaplsy PO Detailed Report

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      IS_LAYOUT     = WLAYO
      IT_FIELDCAT   = TFCAT
      I_SAVE        = 'U'
      IS_VARIANT    = WVARI
    TABLES
      T_OUTTAB      = GT_FINAL2
    EXCEPTIONS
      PROGRAM_ERROR = 1
      OTHERS        = 2.
  IF SY-SUBRC <> 0.
  ENDIF.
ENDFORM.
