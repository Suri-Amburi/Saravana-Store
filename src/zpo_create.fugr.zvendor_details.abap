FUNCTION ZVENDOR_DETAILS.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(IM_DATE_FROM) TYPE  SY-DATUM OPTIONAL
*"     VALUE(IM_DATE_TO) TYPE  SY-DATUM OPTIONAL
*"  EXPORTING
*"     VALUE(EX_DISPLAY) TYPE  ZVEN_DISPLAY
*"     VALUE(ET_RETURN) TYPE  BAPIRET2_TT
*"----------------------------------------------------------------------

  TYPES : BEGIN OF TY_ADRC,
            ADDRNUMBER TYPE AD_ADDRNUM,
            NAME1      TYPE AD_NAME1,
            CITY1      TYPE AD_CITY1,
            CITY2      TYPE AD_CITY2,
            POST_CODE1 TYPE AD_PSTCD1,
            STREET     TYPE AD_STREET,
            STR_SUPPL1 TYPE AD_STRSPP1,
            STR_SUPPL2 TYPE AD_STRSPP2,
            STR_SUPPL3 TYPE AD_STRSPP3,
            HOUSE_NUM1 TYPE AD_HSNM1,
            COUNTRY    TYPE LAND1,
            LANGU      TYPE SPRAS,
            REGION     TYPE REGIO,
            TEL_NUMBER TYPE AD_TLNMBR,
          END OF TY_ADRC.



  DATA : IT_LFA1     TYPE TABLE OF LFA1,
*         IT_LFA1     TYPE TABLE OF LFA1,
         WA_LFA1     TYPE  LFA1,
         WA_ADRC     TYPE TY_ADRC,
         IT_T005U    TYPE TABLE OF T005U,
         WA_T005U    TYPE T005U,
         IT_T005T    TYPE TABLE OF T005T,
         WA_T005T    TYPE T005T,
         IT_ADRC     TYPE TABLE OF TY_ADRC,
         WA_VEN_DISP TYPE ZVEN_DISP.
*  BREAK BREDDY.
*BREAK breddy.
  SELECT LIFNR ADRNR STCD3 FROM LFA1 INTO  CORRESPONDING FIELDS OF TABLE IT_LFA1 WHERE AEDAT BETWEEN IM_DATE_FROM AND IM_DATE_TO OR ERDAT BETWEEN IM_DATE_FROM AND IM_DATE_TO .
*  SELECT LIFNR ADRNR STCD3 FROM LFA1 INTO  CORRESPONDING FIELDS OF TABLE IT_LFA1 WHERE ERDAT BETWEEN IM_DATE_FROM AND IM_DATE_TO .
*  sort it_lfa1  by lifnr .
*  DELETE ADJACENT DUPLICATES FROM it_lfa1 COMPARING lifnr .
  IF IT_LFA1 IS NOT INITIAL.

    SELECT
      ADDRNUMBER
      NAME1
      CITY1
      CITY2
      POST_CODE1
      STREET
      STR_SUPPL1
      STR_SUPPL2
      STR_SUPPL3
      HOUSE_NUM1
      COUNTRY
      LANGU
      REGION
      TEL_NUMBER
      FROM ADRC INTO TABLE IT_ADRC
      FOR ALL ENTRIES IN IT_LFA1
      WHERE ADDRNUMBER  = IT_LFA1-ADRNR.

    SELECT LFM1~LIFNR , LFM1~PLIFZ FROM LFM1 INTO TABLE  @DATA(IT_LFM1) FOR ALL ENTRIES IN @IT_LFA1 WHERE LIFNR = @IT_LFA1-LIFNR.
*    SELECT BUT000~PARTNER FROM BUT000 INTO TABLE @DATA(IT_BUT000) FOR ALL ENTRIES IN @IT_LFA1 WHERE PARTNER = @IT_LFA1-LIFNR.
    SELECT WYT3~LIFNR , WYT3~PARVW , WYT3~LIFN2 FROM WYT3 INTO TABLE @DATA(IT_WYT3) FOR ALL ENTRIES IN @IT_LFA1 WHERE LIFNR = @IT_LFA1-LIFNR AND PARVW = 'ES'.
  ENDIF.
  IF IT_ADRC IS NOT INITIAL.

    SELECT ADRCT~ADDRNUMBER , ADRCT~REMARK FROM ADRCT INTO TABLE @DATA(IT_ADRCT) FOR ALL ENTRIES IN @IT_ADRC WHERE ADDRNUMBER = @IT_ADRC-ADDRNUMBER.

  ENDIF.
  IF IT_WYT3 IS NOT INITIAL.

    SELECT BUT000~PARTNER ,  BUT000~ADDRCOMM , BUT000~NAME_ORG1  FROM BUT000 INTO TABLE @DATA(IT_BUT000) FOR ALL ENTRIES IN @IT_WYT3 WHERE PARTNER = @IT_WYT3-LIFN2.

  ENDIF.

  IF IT_BUT000 IS NOT INITIAL .

    SELECT ADR6~ADDRNUMBER , ADR6~SMTP_ADDR FROM ADR6 INTO TABLE @DATA(IT_ADR61) FOR ALL ENTRIES IN @IT_BUT000 WHERE ADDRNUMBER = @IT_BUT000-ADDRCOMM.

  ENDIF.

  IF IT_ADRC IS NOT INITIAL.

    SELECT * FROM T005U INTO TABLE IT_T005U FOR ALL ENTRIES IN IT_ADRC WHERE LAND1 = IT_ADRC-COUNTRY AND SPRAS = SY-LANGU AND BLAND = IT_ADRC-REGION .
    SELECT * FROM T005T INTO TABLE IT_T005T FOR ALL ENTRIES IN IT_ADRC WHERE LAND1 = IT_ADRC-COUNTRY AND SPRAS = SY-LANGU.
    SELECT ADR6~ADDRNUMBER , ADR6~SMTP_ADDR FROM ADR6 INTO TABLE @DATA(IT_ADR6) FOR ALL ENTRIES IN @IT_ADRC WHERE ADDRNUMBER  = @IT_ADRC-ADDRNUMBER.

  ENDIF.
*  BREAK BREDDY.
  LOOP AT IT_LFA1 INTO WA_LFA1.

    WA_VEN_DISP-VENDOR = WA_LFA1-LIFNR.
    WA_VEN_DISP-GSTIN = WA_LFA1-STCD3.
    READ TABLE IT_ADRC INTO WA_ADRC WITH KEY ADDRNUMBER = WA_LFA1-ADRNR.
    IF SY-SUBRC = 0 .

      WA_VEN_DISP-NAME = WA_ADRC-NAME1.
      WA_VEN_DISP-CITY = WA_ADRC-CITY1.
      WA_VEN_DISP-DISTRICT = WA_ADRC-CITY2.
      WA_VEN_DISP-POST_CODE = WA_ADRC-POST_CODE1.
      WA_VEN_DISP-STREET = WA_ADRC-STREET.
      WA_VEN_DISP-STREET1 = WA_ADRC-STR_SUPPL1.
      WA_VEN_DISP-STREET2 = WA_ADRC-STR_SUPPL2.
      WA_VEN_DISP-STREET3 = WA_ADRC-STR_SUPPL3.
      WA_VEN_DISP-HOUSE_NUM = WA_ADRC-HOUSE_NUM1.
      WA_VEN_DISP-TELEPHONE = WA_ADRC-TEL_NUMBER.
*      WA_VEN_DISP-COUNTRY = WA_ADRC-COUNTRY.

    ENDIF.

    READ TABLE IT_ADRCT ASSIGNING FIELD-SYMBOL(<WA_ADRCT>) WITH KEY ADDRNUMBER = WA_ADRC-ADDRNUMBER.

    IF SY-SUBRC = 0.

      WA_VEN_DISP-CONTACT_PERSON = <WA_ADRCT>-REMARK.

    ENDIF.

    READ TABLE IT_T005U INTO WA_T005U WITH KEY LAND1 = WA_ADRC-COUNTRY BLAND = WA_ADRC-REGION.

    IF SY-SUBRC  = 0.

      WA_VEN_DISP-STATE = WA_T005U-BEZEI.

    ENDIF.
    READ TABLE IT_T005T INTO WA_T005T WITH KEY LAND1 = WA_ADRC-COUNTRY.
    IF SY-SUBRC  = 0.

      WA_VEN_DISP-COUNTRY = WA_T005T-LANDX.

    ENDIF.

    READ TABLE IT_LFM1 ASSIGNING FIELD-SYMBOL(<WA_LFM1>) WITH KEY LIFNR = WA_LFA1-LIFNR.
    IF SY-SUBRC = 0.

      WA_VEN_DISP-VAL_DAYS = <WA_LFM1>-PLIFZ.

    ENDIF.

    READ TABLE IT_ADR6 ASSIGNING FIELD-SYMBOL(<WA_ADR6>) WITH KEY ADDRNUMBER = WA_ADRC-ADDRNUMBER.
    IF SY-SUBRC  = 0.

      WA_VEN_DISP-EMAIL = <WA_ADR6>-SMTP_ADDR.

    ENDIF.

    READ TABLE IT_WYT3 ASSIGNING FIELD-SYMBOL(<WA_WYT3>) WITH KEY LIFNR = WA_LFA1-LIFNR PARVW = 'ES'.

    IF <WA_WYT3> IS ASSIGNED.
      READ TABLE IT_BUT000 ASSIGNING FIELD-SYMBOL(<WA_BUT000>) WITH  KEY PARTNER = <WA_WYT3>-LIFN2.
      IF SY-SUBRC = 0.
        WA_VEN_DISP-AGENT = <WA_BUT000>-NAME_ORG1.
      ENDIF.
    ENDIF.

    IF <WA_BUT000> IS ASSIGNED.
      READ TABLE IT_ADR61 ASSIGNING FIELD-SYMBOL(<WA_ADR61>) WITH  KEY ADDRNUMBER = <WA_BUT000>-ADDRCOMM.

      IF SY-SUBRC = 0.

        WA_VEN_DISP-AGENT_EMAIL = <WA_ADR61>-SMTP_ADDR.

      ENDIF.
    ENDIF.
*    READ TABLE IT_LFA11 into wa_lfa11 WITH KEY LIFNR = <WA_WYT3>-LIFNR.
*    IF SY-SUBRC = 0.
*
*      WA_VEN_DISP-AGENT = <WA_LFA11>-NAME1.
*
*    ENDIF.

    APPEND  WA_VEN_DISP TO EX_DISPLAY.

    CLEAR : WA_VEN_DISP.
  ENDLOOP.



  BREAK BREDDY.

ENDFUNCTION.
