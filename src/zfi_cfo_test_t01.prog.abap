*&---------------------------------------------------------------------*
*& Include          ZACCOUNTANT_DIARY_T01
*&---------------------------------------------------------------------*

  DATA : LV_EDATE TYPE  SY-DATUM .
  DATA : LV_SDATE TYPE  SY-DATUM .
  DATA : LV_DAYS TYPE P .
  DATA : LV_DAY(10) TYPE C .
  DATA : D(10) TYPE C .
  DATA: OK_CODE LIKE SY-UCOMM.
  TYPES :
    BEGIN OF TY_DATA,
      EBELN     TYPE EKBE-EBELN,
      EBELP     TYPE EKBE-EBELP,
      BEWTP     TYPE EKBE-BEWTP,
      BWART     TYPE EKBE-BWART,
      MENGE     TYPE EKBE-MENGE,
      BELNR     TYPE EKBE-BELNR,
      GJAHR     TYPE EKBE-GJAHR,
      BUDAT     TYPE EKBE-BUDAT,
      LFBNR     TYPE EKBE-LFBNR,
      BSART     TYPE EKKO-BSART,
      LOEKZ     TYPE EKKO-LOEKZ,
      AEDAT     TYPE EKKO-AEDAT,
      LIFNR     TYPE EKKO-LIFNR,
      WAERS     TYPE EKKO-WAERS,
      ZTERM     TYPE EKKO-ZTERM,
      ZBD1T     TYPE EKKO-ZBD1T,
      QR_CODE   TYPE ZINW_T_HDR-QR_CODE,
      NAME1     TYPE ZINW_T_HDR-NAME1,
      STATUS    TYPE ZINW_T_HDR-STATUS,
      SOE       TYPE ZINW_T_HDR-SOE,
      BILL_NUM  TYPE ZINW_T_HDR-BILL_NUM,
      MBLNR_103 TYPE ZINW_T_HDR-MBLNR_103,
      MBLNR     TYPE ZINW_T_HDR-MBLNR,
      INWD_DOC  TYPE ZINW_T_HDR-INWD_DOC,
      RETURN_PO TYPE ZINW_T_HDR-RETURN_PO,
      BILL_DATE TYPE ZINW_T_HDR-BILL_DATE,
*      LR_NO     TYPE ZINW_T_HDR-LR_NO,
      MATNR     TYPE ZINW_T_ITEM-MATNR,
      MATKL     TYPE ZINW_T_ITEM-MATKL,
      NETPR_P   TYPE ZINW_T_ITEM-NETPR_P,
      NETWR_P   TYPE ZINW_T_ITEM-NETWR_P,                              ""ZINW_T_ITEM-NETPR_GP,
      NETPR_GP  TYPE ZINW_T_ITEM-NETPR_GP,
      MENGE_P   TYPE ZINW_T_ITEM-MENGE_P,
*      RPO       TYPE EKPO-EBELN,
*      RPOI      TYPE EKPO-EBELP,
*      rQTY      TYPE EKPO-MENGE,
*      rNET      TYPE EKPO-NETPR,
*      rGROSS    TYPE EKPO-NETWR,
*      MWSKZ     TYPE EKPO-MWSKZ,
      DUE_DATE  TYPE EKBE-BUDAT,
*      BELNR1    TYPE EKBE-BELNR,
    END OF TY_DATA.

  TYPES :
    BEGIN OF TY_FINAL1,
      SLNO     TYPE INT4,
      DATE     TYPE CHAR10,
      AMOUNT   TYPE NETPR,
      CURRENCY TYPE WAERS,
      MBLNR    TYPE ZINW_T_HDR-MBLNR,
    END OF TY_FINAL1 .

  TYPES :
    BEGIN OF TY_FINAL2,
      SEL(01)      ,
      SLNO         TYPE INT4,
      DATE         TYPE SY-DATUM,
      AMOUNT       TYPE NETPR,
      CURRENCY     TYPE WAERS,
      EBELN        TYPE EKKO-EBELN,
      EBELP        TYPE EKPO-EBELP,
      WAERS        TYPE EKKO-WAERS,
      LIFNR        TYPE EKKO-LIFNR,
      NAME1        TYPE LFA1-NAME1,
      BILL_NUM     TYPE ZINW_T_HDR-BILL_NUM,
      BILL_DATE    TYPE ZINW_T_HDR-BILL_DATE,
      GRPO_NO      TYPE ZINW_T_HDR-MBLNR,
      DUE_DATE     TYPE  SY-DATUM,
      CREATED_DATE TYPE SY-DATUM,
      MATKL        TYPE MATKL,
      AEDAT        TYPE EKKO-AEDAT,
      INWD_DOC     TYPE ZINW_T_HDR-INWD_DOC,
      QR_CODE      TYPE ZINW_T_HDR-QR_CODE,
      REC_DATE     TYPE ZINW_T_HDR-REC_DATE,
*      LR_NO        TYPE ZINW_T_HDR-LR_NO,
    END OF TY_FINAL2 .

*** Tables
  DATA :
    GT_DATA    TYPE STANDARD TABLE OF TY_DATA,
    GS_DATA    TYPE TY_DATA,
    GT_DATA_PO TYPE STANDARD TABLE OF TY_DATA,
    GT_FINAL1  TYPE STANDARD TABLE OF TY_FINAL1,
    GS_FINAL1  TYPE TY_FINAL1,
    GT_FINAL2  TYPE STANDARD TABLE OF TY_FINAL2,
    GS_FINAL2  TYPE TY_FINAL2.
  FIELD-SYMBOLS :
    <GL_FINAL2>  TYPE TY_FINAL2.

  DATA : IT_A003 TYPE TABLE OF A003 .
  DATA : IT_EKPO TYPE TABLE OF EKPO .
  DATA : IT_KONP TYPE TABLE OF KONP .
  DATA : GT_FTABLE TYPE STANDARD TABLE OF ZCFO_FIN1,
         GS_FTABLE TYPE ZCFO_FIN1,
         IT_BKPF   TYPE TABLE OF BKPF,
         WA_BKPF   TYPE  BKPF,
         IT_BSEG   TYPE TABLE OF BSEG,
         WA_BSEG   TYPE BSEG.

  DATA :  LV_AMOUNT TYPE ZBPREI_PT.
*** Constants
  CONSTANTS :
    C_X(1) VALUE 'X'.



  DATA:CONTAINER   TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
       GRID        TYPE REF TO CL_GUI_ALV_GRID,
       IT_EXCLUDE  TYPE UI_FUNCTIONS,
       LW_LAYO     TYPE LVC_S_LAYO,
       LT_FIELDCAT TYPE  LVC_T_FCAT.
  DATA: LT_EXCLUDE TYPE UI_FUNCTIONS.
  DATA : LS_STABLE TYPE LVC_S_STBL.
  DATA : LV_SUM    TYPE ZBPREI_PT,
         C_REFRESH TYPE SYUCOMM VALUE 'REF'.
*** Event Class
  CLASS EVENT_CLASS DEFINITION DEFERRED.
  DATA: GR_EVENT TYPE REF TO EVENT_CLASS.

*** Event Handeler Class
  CLASS EVENT_CLASS DEFINITION.
    PUBLIC SECTION.
      METHODS: HANDLE_DATA_CHANGED
                  FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID
        IMPORTING ER_DATA_CHANGED.
  ENDCLASS.
*** Class Implemntation
  CLASS EVENT_CLASS IMPLEMENTATION.
    METHOD HANDLE_DATA_CHANGED.
*      BREAK BREDDY .
      DATA : ERROR_IN_DATA(1).
      LOOP AT ER_DATA_CHANGED->MT_MOD_CELLS ASSIGNING FIELD-SYMBOL(<X_MOD_CELLS>).
        READ TABLE GT_FINAL2 ASSIGNING <GL_FINAL2> INDEX <X_MOD_CELLS>-ROW_ID .
        IF SY-SUBRC = 0 .
          IF  <X_MOD_CELLS>-VALUE IS NOT INITIAL.
            LV_SUM =   <GL_FINAL2>-AMOUNT +   LV_SUM .
          ENDIF .

*        READ TABLE GT_FINAL2 ASSIGNING <GL_FINAL2> INDEX <X_MOD_CELLS>-VALUE .
        IF <X_MOD_CELLS>-VALUE  IS  INITIAL.

          LV_SUM = LV_SUM - <GL_FINAL2>-AMOUNT .

        ENDIF.
        ENDIF.
      ENDLOOP.

*** Refreshing Table Data
      IF GRID IS BOUND.
        DATA: IS_STABLE TYPE LVC_S_STBL, LV_LINES TYPE INT2.
        IS_STABLE = 'XX'.
        IF GRID IS BOUND.
          CALL METHOD GRID->REFRESH_TABLE_DISPLAY
            EXPORTING
              IS_STABLE = IS_STABLE               " With Stable Rows/Columns
            EXCEPTIONS
              FINISHED  = 1                       " Display was Ended (by Export)
              OTHERS    = 2.
          IF SY-SUBRC <> 0.
            MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ENDIF.
        ENDIF.
      ENDIF.


*** Display Errors
      IF ERROR_IN_DATA IS NOT INITIAL .
        CALL METHOD ER_DATA_CHANGED->DISPLAY_PROTOCOL( ).
      ELSE.
*** Refreshing Main Screen
        CALL METHOD CL_GUI_CFW=>SET_NEW_OK_CODE
          EXPORTING
            NEW_CODE = C_REFRESH.
      ENDIF.

    ENDMETHOD.
  ENDCLASS .
