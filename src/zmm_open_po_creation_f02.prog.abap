*&---------------------------------------------------------------------*
*& Include          ZMM_OPEN_PO_CREATION_F02
*&---------------------------------------------------------------------*

FORM GET_FILENAME  CHANGING FP_P_FILE.

  DATA: LI_FILETABLE    TYPE FILETABLE,
        LX_FILETABLE    TYPE FILE_TABLE,
        LV_RETURN_CODE  TYPE I,
        LV_WINDOW_TITLE TYPE STRING.

  CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
    EXPORTING
      WINDOW_TITLE            = LV_WINDOW_TITLE
    CHANGING
      FILE_TABLE              = LI_FILETABLE
      RC                      = LV_RETURN_CODE
    EXCEPTIONS
      FILE_OPEN_DIALOG_FAILED = 1
      CNTL_ERROR              = 2
      ERROR_NO_GUI            = 3
      NOT_SUPPORTED_BY_GUI    = 4
      OTHERS                  = 5.

  IF LI_FILETABLE IS NOT INITIAL.
    LX_FILETABLE = LI_FILETABLE[ 1 ].
    FP_P_FILE = LX_FILETABLE-FILENAME.
  ENDIF.

  SPLIT FP_P_FILE AT '.' INTO FNAME ENAME.
  SET LOCALE LANGUAGE SY-LANGU.
  TRANSLATE ENAME TO UPPER CASE.

ENDFORM.


FORM GET_DATA  CHANGING P_GT_FILE.
  DATA : I_TYPE    TYPE TRUXS_T_TEXT_DATA.
  DATA : LV_FILE TYPE RLGRAP-FILENAME.

  IF ENAME EQ 'XLSX' OR ENAME EQ 'XLS'.
    REFRESH GT_FILE[].
    LV_FILE = P_FILE.
***  FM TO UPLOAD DATA INTO INTERNAL TABLE FROM EXCEL
    CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
      EXPORTING
        I_TAB_RAW_DATA       = I_TYPE
        I_FILENAME           = LV_FILE
      TABLES
        I_TAB_CONVERTED_DATA = GT_FILE[]
      EXCEPTIONS
        CONVERSION_FAILED    = 1
        OTHERS               = 2.
    DELETE GT_FILE[] FROM 1 TO 2.
  ELSE.
    MESSAGE E398(00) WITH 'Invalid File Type'.
  ENDIF.
  IF GT_FILE IS INITIAL.
    MESSAGE 'No records to upload' TYPE 'E'.
  ENDIF.
ENDFORM.


FORM PROCESS_DATA.
  FIELD-SYMBOLS:
    <LS_FILE>   TYPE TY_FILE,
    <LS_FILE_H> TYPE TY_FILE.

  DATA : LT_HDR        TYPE  ZPH_HED_TT,
         LT_ITEM       TYPE TABLE OF ZPH_ITEM,
         HEADER_RETURN TYPE ZITEM_ES,
         ITEM_RETURN   TYPE ZITEM_ES,
         LT_FINAL      TYPE STANDARD TABLE OF TY_FINAL.

  REFRESH : LT_FINAL.
  DATA(GT_FILE_H) = GT_FILE.
  SORT GT_FILE_H BY INDENT_NO.
  DELETE ADJACENT DUPLICATES FROM GT_FILE_H COMPARING INDENT_NO.
  LOOP AT GT_FILE_H ASSIGNING <LS_FILE_H>.
    REFRESH : LT_HDR , LT_ITEM.
    <LS_FILE_H>-TRANSPORTER =    |{ <LS_FILE_H>-TRANSPORTER ALPHA = IN }|.
    <LS_FILE_H>-VENDOR =    |{ <LS_FILE_H>-VENDOR ALPHA = IN }|.
    APPEND VALUE #( INDENT_NO = <LS_FILE_H>-INDENT_NO
         DATE = <LS_FILE_H>-PDATE+6(4) && <LS_FILE_H>-PDATE+3(2) && <LS_FILE_H>-PDATE+0(2)
         VENDOR = <LS_FILE_H>-VENDOR
         SUP_SAL_NO = <LS_FILE_H>-SUP_SAL_NO
         SUP_NAME = <LS_FILE_H>-SUP_NAME
         VENDOR_NAME = <LS_FILE_H>-VENDOR_NAME
         GROUP = <LS_FILE_H>-GROUP
         TRANSPORTER = <LS_FILE_H>-TRANSPORTER
         VENDOR_LOCATION = <LS_FILE_H>-VENDOR_LOCATION
         DELIVERY_AT = <LS_FILE_H>-DELIVERY_AT
         LEAD_TIME = <LS_FILE_H>-LEAD_TIME
         PUR_GROUP = <LS_FILE_H>-PUR_GROUP ) TO LT_HDR.

    LOOP AT GT_FILE ASSIGNING <LS_FILE> WHERE INDENT_NO = <LS_FILE_H>-INDENT_NO.
      APPEND VALUE #( CATEGORY_CODE = <LS_FILE>-CATEGORY_CODE
                      STYLE = <LS_FILE>-STYLE
                      FROM_SIZE = <LS_FILE>-FROM_SIZE
                      TO_SIZE = <LS_FILE>-TO_SIZE
                      COLOR = <LS_FILE>-COLOR
                      QUANTITY = <LS_FILE>-QUANTITY
                      PRICE = <LS_FILE>-PRICE
                      REMARKS = <LS_FILE>-REMARKS ) TO LT_ITEM.
    ENDLOOP.

    CALL FUNCTION 'ZPHOTO_PO_APP1'
      EXPORTING
        IM_HEADER_TT  = LT_HDR                  " Header table type
      IMPORTING
        HEADER_RETURN = HEADER_RETURN           " Character field of length 40
        ITEM_RETURN   = ITEM_RETURN             " Character field of length 40
      TABLES
        PH_ITEM       = LT_ITEM.               " Item Data

    IF HEADER_RETURN-ERROR_MESSAGE IS NOT INITIAL.
      APPEND VALUE #( INDENT = <LS_FILE_H>-INDENT_NO MSGTYP = 'E' MESSAGE = HEADER_RETURN-ERROR_MESSAGE ) TO LT_FINAL.
    ELSEIF ITEM_RETURN-ERROR_MESSAGE IS NOT INITIAL.
      APPEND VALUE #( INDENT = <LS_FILE_H>-INDENT_NO MSGTYP = 'E' MESSAGE = ITEM_RETURN-ERROR_MESSAGE ) TO LT_FINAL.
    ELSE.
      APPEND VALUE #( INDENT = <LS_FILE_H>-INDENT_NO MSGTYP = 'S' MESSAGE = HEADER_RETURN-SUCCESS_MESSAGE ) TO LT_FINAL.
    ENDIF.
  ENDLOOP.

  DATA:
    LT_FCAT   TYPE SLIS_T_FIELDCAT_ALV,
    LS_LAYOUT TYPE SLIS_LAYOUT_ALV.

  REFRESH : LT_FCAT.
*** Field Cat log
  APPEND VALUE #( FIELDNAME = 'INDENT'   TABNAME = 'LT_FINAL' SELTEXT_M = 'Indenet Number'           OUTPUTLEN = 20 ) TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'MSGTYP'   TABNAME = 'LT_FINAL' SELTEXT_M = 'Message Type' OUTPUTLEN = 20 ) TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'MESSAGE'  TABNAME = 'LT_FINAL' SELTEXT_M = 'Message'   OUTPUTLEN = 20 ) TO LT_FCAT.

*** Display Final Table
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM = SY-REPID
      IS_LAYOUT          = LS_LAYOUT
      IT_FIELDCAT        = LT_FCAT
      I_SAVE             = 'A'
    TABLES
      T_OUTTAB           = LT_FINAL
    EXCEPTIONS
      PROGRAM_ERROR      = 1
      OTHERS             = 2.

ENDFORM.
