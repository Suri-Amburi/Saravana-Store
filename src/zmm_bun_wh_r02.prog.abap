*&---------------------------------------------------------------------*
*& Report ZMM_BUN_WH_R01
*&---------------------------------------------------------------------*
*& Client  : Saravana
*& TC      : Suri
*& Data    : 24.07.2019
*& Purpose : Bundles Received in Warehouse - Not Opened Report
*& T-Code  : ZBW
*&---------------------------------------------------------------------*
REPORT ZMM_BUN_WH_R02.

TYPES :
  BEGIN OF TY_FINAL,
    SNO     TYPE INT4,
    GRP     TYPE WGH01-WWGHA,
    GRP_DES TYPE WGH01-WWGHB,
    QTY     TYPE EKPO-MENGE,
    QTY_15  TYPE FKIMG,
    DAYS    TYPE P DECIMALS 0,
  END OF TY_FINAL,

  BEGIN OF TY_KLAH_H,
    CLINT TYPE KLAH-CLINT,
    KLART TYPE KLAH-KLART,
    CLASS TYPE KLAH-CLASS,
    OBJEK TYPE KSSK-OBJEK,
  END OF TY_KLAH_H,

*** Item Data
  BEGIN OF TY_KLAH_I,
    CLINT TYPE KLAH-CLINT,
    KLART TYPE KLAH-KLART,
    CLASS TYPE KLAH-CLASS,
  END OF TY_KLAH_I.

DATA :
  LT_FINAL  TYPE STANDARD TABLE OF TY_FINAL,
  LT_KLAH_H TYPE STANDARD TABLE OF TY_KLAH_H,
  LT_KLAH_I TYPE STANDARD TABLE OF TY_KLAH_I,
  WA_FINAL  TYPE TY_FINAL,
  LV_COUNT  TYPE SY-TABIX VALUE 1.

FIELD-SYMBOLS :
  <LS_KLAH_H> TYPE TY_KLAH_H,
  <LS_KLAH_I> TYPE TY_KLAH_I.

CONSTANTS : C_STATUS(2) VALUE '02'. " 02  Gate Entry Created

*** Iuput
PARAMETERS:
  P_DATE TYPE ERDAT.

START-OF-SELECTION.
*  SELECT ZINW_T_ITEM~EBELN,
*         ZINW_T_ITEM~EBELP,
*         ZINW_T_ITEM~MENGE_P,
*         ZINW_T_HDR~ERDATE,
*         ZINW_T_ITEM~MATNR,
*         ZINW_T_ITEM~MATKL
*         FROM ZINW_T_ITEM AS ZINW_T_ITEM
*         INNER JOIN ZINW_T_HDR AS ZINW_T_HDR ON ZINW_T_HDR~QR_CODE = ZINW_T_ITEM~QR_CODE
*         INTO TABLE @DATA(LT_ITEM) WHERE ZINW_T_HDR~ERDATE LE @P_DATE AND STATUS = @C_STATUS.

  SELECT ZINW_T_ITEM~EBELN,
         ZINW_T_ITEM~EBELP,
         ZINW_T_ITEM~MENGE_P,
         ZINW_T_HDR~QR_CODE,
         ZINW_T_STATUS~CREATED_DATE AS ERDATE,
         ZINW_T_ITEM~MATNR,
         ZINW_T_ITEM~MATKL
         FROM ZINW_T_ITEM AS ZINW_T_ITEM
         INNER JOIN ZINW_T_HDR AS ZINW_T_HDR ON ZINW_T_HDR~QR_CODE = ZINW_T_ITEM~QR_CODE
         INNER JOIN ZINW_T_STATUS AS ZINW_T_STATUS ON ZINW_T_HDR~QR_CODE = ZINW_T_STATUS~QR_CODE AND STATUS_FIELD = 'QR_CODE' AND STATUS_VALUE = 'QR02'
         INTO TABLE @DATA(LT_ITEM) WHERE ZINW_T_STATUS~CREATED_DATE LE @P_DATE AND ZINW_T_HDR~STATUS = @C_STATUS.

  IF LT_ITEM IS NOT INITIAL.

*** GET Marchndise Cat by Material Group
    DATA : R_MATKL TYPE RANGE OF KLASSE_D.
    REFRESH :R_MATKL.
    LOOP AT LT_ITEM ASSIGNING FIELD-SYMBOL(<LS_ITEM>).
      APPEND VALUE #( LOW = <LS_ITEM>-MATKL SIGN = 'I' OPTION = 'EQ' ) TO R_MATKL.
    ENDLOOP.
*** Get Clent ID from Material Group
    SELECT
      KSSK~CLINT
      KLAH~KLART
      KLAH~CLASS
      KSSK~OBJEK
      INTO TABLE LT_KLAH_H
      FROM KLAH AS KLAH
      INNER JOIN KSSK AS KSSK  ON KSSK~OBJEK = KLAH~CLINT
      WHERE KLAH~CLASS IN R_MATKL.

    IF LT_KLAH_H IS NOT INITIAL.
*** Get Marchandise Cat from Clent ID
      SELECT
      KLAH~CLINT,
      KLAH~KLART,
      KLAH~CLASS
      INTO TABLE @LT_KLAH_I
      FROM KLAH AS KLAH
      FOR ALL ENTRIES IN @LT_KLAH_H WHERE KLAH~CLINT = @LT_KLAH_H-CLINT.
    ENDIF.
  ENDIF.
*** PREPARING FINAL TABLE
  SORT LT_KLAH_I BY CLINT.
  SORT LT_KLAH_H BY CLINT.
  SORT LT_ITEM BY MATKL.

  LOOP AT LT_KLAH_I ASSIGNING <LS_KLAH_I>.
    WA_FINAL-GRP     = <LS_KLAH_I>-CLASS.
    READ TABLE LT_KLAH_H ASSIGNING <LS_KLAH_H> WITH KEY CLINT = <LS_KLAH_I>-CLINT.
    LOOP AT LT_KLAH_H ASSIGNING <LS_KLAH_H> FROM SY-TABIX.
      IF <LS_KLAH_H>-CLINT <> <LS_KLAH_I>-CLINT.
        EXIT.
      ENDIF.
      READ TABLE LT_ITEM ASSIGNING <LS_ITEM> WITH KEY MATKL = <LS_KLAH_H>-CLASS.
      LOOP AT LT_ITEM ASSIGNING <LS_ITEM> FROM SY-TABIX.
        IF <LS_ITEM>-MATKL <> <LS_KLAH_H>-CLASS.
          EXIT.
        ENDIF.
        ADD <LS_ITEM>-MENGE_P TO WA_FINAL-QTY.
      ENDLOOP.
    ENDLOOP.
    WA_FINAL-SNO = LV_COUNT.
    APPEND WA_FINAL TO LT_FINAL.
    CLEAR : WA_FINAL.
    LV_COUNT = LV_COUNT + 1.
  ENDLOOP.

*** Field Catlog
  DATA:
    LS_LAYOUT   TYPE SLIS_LAYOUT_ALV,
    LT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
    LS_FIELDCAT TYPE SLIS_FIELDCAT_ALV.

*** Field Catlog

  LS_FIELDCAT-FIELDNAME   = 'SNO'.
  LS_FIELDCAT-SELTEXT_L   = 'SNO'.
  LS_FIELDCAT-REF_TABNAME = 'LT_FINAL'.
  LS_FIELDCAT-OUTPUTLEN   = 5.
  APPEND LS_FIELDCAT TO LT_FIELDCAT.
  CLEAR LS_FIELDCAT.

  LS_FIELDCAT-FIELDNAME   = 'GRP'.
  LS_FIELDCAT-SELTEXT_L   = 'Group'.
  LS_FIELDCAT-REF_TABNAME = 'LT_FINAL'.
  LS_FIELDCAT-OUTPUTLEN   = 20.
  APPEND LS_FIELDCAT TO LT_FIELDCAT.
  CLEAR LS_FIELDCAT.

*  LS_FIELDCAT-FIELDNAME   = 'GRP_DES'.
*  LS_FIELDCAT-SELTEXT_L   = 'Group Description'.
*  LS_FIELDCAT-REF_TABNAME = 'LT_FINAL'.
*  APPEND LS_FIELDCAT TO LT_FIELDCAT.
*  CLEAR LS_FIELDCAT.

  LS_FIELDCAT-FIELDNAME   = 'QTY'.
  LS_FIELDCAT-SELTEXT_L   = 'Quantity'.
  APPEND LS_FIELDCAT TO LT_FIELDCAT.
  CLEAR LS_FIELDCAT.

*** Dispalying ALV Report
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM = SY-REPID         " Name of the calling program
      IS_LAYOUT          = LS_LAYOUT
      IT_FIELDCAT        = LT_FIELDCAT
      I_DEFAULT          = 'X'              " Initial variant active/inactive logic
      I_SAVE             = 'A'              " Variants can be saved
    TABLES
      T_OUTTAB           = LT_FINAL
    EXCEPTIONS
      PROGRAM_ERROR      = 1
      OTHERS             = 2.
