*&---------------------------------------------------------------------*
*& Report ZMM_BUN_WH_R01
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZMM_BUN_TRANSIT_R01.
TABLES : VBRK.
TYPES :
  BEGIN OF TY_FINAL,
    SNO     TYPE INT4,
    GRP     TYPE WGH01-WWGHA,
    GRP_DES TYPE WGH01-WWGHB,
    MENGE   TYPE EKPO-MENGE,
  END OF TY_FINAL,

  BEGIN OF TY_GROUP,
    MATKL TYPE MARA-MATKL,
    HIER  TYPE WGH01-WWGHA,
    DES   TYPE WGH01-WWGHB,
  END OF TY_GROUP.

DATA :
  LT_GROUP TYPE STANDARD TABLE OF TY_GROUP,
  LT_WGH01 TYPE STANDARD TABLE OF WGH01,
  LT_FINAL TYPE STANDARD TABLE OF TY_FINAL,
  WA_FINAL TYPE TY_FINAL.

CONSTANTS : C_STATUS(2) VALUE '01'. " QR Generated

PARAMETERS :
 P_DATE TYPE VBRK-ERDAT.

DATA(LV_START_DATE) = P_DATE - 30.

START-OF-SELECTION.
  IF P_DATE IS INITIAL.
    MESSAGE S006(ZMSG_CLS) DISPLAY LIKE 'E'.
    LEAVE LIST-PROCESSING.
  ENDIF.
  SELECT ZINW_T_ITEM~EBELN,
         ZINW_T_ITEM~EBELP,
         ZINW_T_ITEM~MENGE_P,
         ZINW_T_HDR~ERDATE,
         ZINW_T_ITEM~MATNR,
         ZINW_T_ITEM~MAKTX,
         MARA~MATKL
         FROM ZINW_T_ITEM AS ZINW_T_ITEM
         INNER JOIN MARA AS MARA ON  ZINW_T_ITEM~MATNR = MARA~MATNR
         INNER JOIN ZINW_T_HDR AS ZINW_T_HDR ON ZINW_T_ITEM~EBELN = ZINW_T_HDR~EBELN
         INTO TABLE @DATA(LT_ITEM) WHERE ZINW_T_HDR~ERDATE LE @LV_START_DATE
         AND ZINW_T_HDR~STATUS = @C_STATUS.

  IF SY-SUBRC = 0.
    DATA(LT_ITEM_T) = LT_ITEM.
    SORT LT_ITEM_T BY MATKL.
    DELETE ADJACENT DUPLICATES FROM LT_ITEM_T COMPARING MATKL.
    LOOP AT LT_ITEM_T ASSIGNING FIELD-SYMBOL(<LS_ITEM>).
***   Merchandising Category Hierarchy from Material Group
      CALL FUNCTION 'MERCHANDISE_GROUP_HIER_ART_SEL'
        EXPORTING
          MATKL       = <LS_ITEM>-MATKL
          SPRAS       = SY-LANGU
        TABLES
          O_WGH01     = LT_WGH01
        EXCEPTIONS
          NO_BASIS_MG = 1
          NO_MG_HIER  = 2
          OTHERS      = 3.
      IF SY-SUBRC <> 0.
*      IMPLEMENT SUITABLE ERROR HANDLING HERE
      ELSE.
        READ TABLE  LT_WGH01 ASSIGNING FIELD-SYMBOL(<LS_WGH01>) WITH KEY MATKL = <LS_ITEM>-MATKL.
        IF SY-SUBRC = 0.
          APPEND VALUE #( MATKL = <LS_ITEM>-MATKL HIER = <LS_WGH01>-WWGHA DES = <LS_WGH01>-WWGHB ) TO LT_GROUP .
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDIF.

  DATA: LV_COUNT TYPE INT2 VALUE 1.
  DATA: LV_INDEX TYPE SY-TABIX.
  SORT LT_GROUP BY HIER.
  DATA(LT_GROUP_H) = LT_GROUP.
  DELETE ADJACENT DUPLICATES FROM LT_GROUP_H COMPARING HIER.
  SORT LT_ITEM BY MATKL.
***** Preparing Final Table
**  LOOP AT LT_GROUP_H ASSIGNING FIELD-SYMBOL(<LS_GROUP_H>).
**    WA_FINAL-SNO = LV_COUNT.
**    WA_FINAL-GRP = <LS_GROUP_H>-HIER.
**    WA_FINAL-GRP_DES = <LS_GROUP_H>-DES.
**    LV_COUNT = LV_COUNT + 1.
**    LOOP AT LT_GROUP ASSIGNING FIELD-SYMBOL(<LS_GROUP>) WHERE HIER = <LS_GROUP_H>-HIER.
**      UNASSIGN : <LS_ITEM>.
**      LOOP AT LT_ITEM ASSIGNING <LS_ITEM> WHERE MATKL = <LS_GROUP>-MATKL.
**        ADD <LS_ITEM>-menge_P TO WA_FINAL-menge.
**      ENDLOOP.
**    ENDLOOP.
**    APPEND WA_FINAL TO LT_FINAL.
**    CLEAR : WA_FINAL.
**  ENDLOOP.

*** PREPARING FINAL TABLE
  DATA : LV_TABIX1 TYPE SY-TABIX.
  DATA : LV_TABIX2 TYPE SY-TABIX.
  SORT LT_GROUP BY HIER MATKL.
  SORT LT_GROUP_H BY HIER MATKL.
  LOOP AT LT_GROUP_H ASSIGNING FIELD-SYMBOL(<LS_GROUP_H>).
    WA_FINAL-SNO = LV_COUNT.
    WA_FINAL-GRP = <LS_GROUP_H>-HIER.
    WA_FINAL-GRP_DES = <LS_GROUP_H>-DES.
    LV_COUNT = LV_COUNT + 1.
    READ TABLE LT_GROUP WITH KEY HIER = <LS_GROUP_H>-HIER TRANSPORTING NO FIELDS.
    LV_TABIX1 = SY-TABIX.
    LOOP AT LT_GROUP ASSIGNING FIELD-SYMBOL(<LS_GROUP>) FROM LV_TABIX1.
      IF <LS_GROUP_H>-HIER <> <LS_GROUP>-HIER.
        EXIT.
      ENDIF.
      UNASSIGN : <LS_ITEM>.
      READ TABLE LT_ITEM WITH KEY MATKL = <LS_GROUP>-MATKL TRANSPORTING NO FIELDS.
      LV_TABIX2 = SY-TABIX.
      LOOP AT LT_ITEM ASSIGNING <LS_ITEM> FROM LV_TABIX2.
        IF <LS_ITEM>-MATKL <> <LS_GROUP>-MATKL.
          EXIT.
        ENDIF.
        ADD <LS_ITEM>-MENGE_P TO WA_FINAL-MENGE.
      ENDLOOP.
    ENDLOOP.
    APPEND WA_FINAL TO LT_FINAL.
    CLEAR : WA_FINAL.
  ENDLOOP.

*** Field Catlog
  DATA:
    LS_LAYOUT   TYPE SLIS_LAYOUT_ALV,
    LT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
    LS_FIELDCAT TYPE SLIS_FIELDCAT_ALV,
    WVARI       TYPE DISVARIANT,
    LT_SORT     TYPE SLIS_T_SORTINFO_ALV.

  WVARI-REPORT    = SY-REPID.
  WVARI-USERNAME  = SY-UNAME.

  LS_LAYOUT-ZEBRA       = ABAP_TRUE.
  LS_LAYOUT-COLWIDTH_OPTIMIZE  = ABAP_TRUE.

*** Field Catlog
  REFRESH LT_FIELDCAT.
  LS_FIELDCAT-FIELDNAME      = 'SNO'.
  LS_FIELDCAT-SELTEXT_L      = 'SNO'.
  LS_FIELDCAT-DDIC_OUTPUTLEN = 4.
  LS_FIELDCAT-REF_TABNAME    = 'LT_FINAL'.
  APPEND LS_FIELDCAT TO LT_FIELDCAT.
  CLEAR LS_FIELDCAT.

  LS_FIELDCAT-FIELDNAME      = 'GRP'.
  LS_FIELDCAT-SELTEXT_L      = 'Group'.
  LS_FIELDCAT-REF_TABNAME    = 'LT_FINAL'.
  APPEND LS_FIELDCAT TO LT_FIELDCAT.
  CLEAR LS_FIELDCAT.

*  LS_FIELDCAT-FIELDNAME = 'GRP_DES'.
*  LS_FIELDCAT-SELTEXT_L = 'Group Description'.
*  LS_FIELDCAT-REF_TABNAME = 'LT_FINAL'.
*  APPEND LS_FIELDCAT TO LT_FIELDCAT.
*  CLEAR LS_FIELDCAT.

  LS_FIELDCAT-FIELDNAME      = 'MENGE'.
  LS_FIELDCAT-SELTEXT_L      = 'Quantity'.
  APPEND LS_FIELDCAT TO LT_FIELDCAT.
  CLEAR LS_FIELDCAT.

**** Dispalying ALV Report
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM = SY-REPID         " Name of the calling program
      IS_LAYOUT          = LS_LAYOUT        " List layout specifications
      IT_FIELDCAT        = LT_FIELDCAT      " Field catalog with field descriptions
      I_DEFAULT          = 'X'              " Initial variant active/inactive logic
      I_SAVE             = 'A'              " Variants can be saved
    TABLES
      T_OUTTAB           = LT_FINAL          " Table with data to be displayed
    EXCEPTIONS
      PROGRAM_ERROR      = 1                " Program errors
      OTHERS             = 2.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
