class ZCL_ZGW_PO_HDR_STATUS_DPC_EXT definition
  public
  inheriting from ZCL_ZGW_PO_HDR_STATUS_DPC
  create public .

public section.
protected section.

  methods HEADERSET_GET_ENTITYSET
    redefinition .
private section.
ENDCLASS.



CLASS ZCL_ZGW_PO_HDR_STATUS_DPC_EXT IMPLEMENTATION.


  METHOD HEADERSET_GET_ENTITYSET.
*** Data Decleration
    DATA :
      LV_GROUP_ID TYPE ZCL_ZGW_PO_HDR_STATUS_MPC_EXT=>TS_HEADER-GROUP_ID,
      LV_DAYS     TYPE ZCL_ZGW_PO_HDR_STATUS_MPC_EXT=>TS_HEADER-NO_OF_DAYS,
      LV_DATE_TO  TYPE SY-DATUM,
      LS_ENTITY   TYPE ZCL_ZGW_PO_HDR_STATUS_MPC_EXT=>TS_HEADER,
      R_DATA      TYPE RANGE OF SY-DATUM.

    CONSTANTS :
      C_GROUP_ID(10) VALUE 'GroupId',
      C_DAYS(10)     VALUE 'NoOfDays',
      C_M(1)         VALUE 'M',
      C_X(1)         VALUE 'X',
      C_ZLOC(4)      VALUE 'ZLOP',
      C_ZOSP(4)      VALUE 'ZOSP'.

*** Filters
*** Select Options
    IF IT_FILTER_SELECT_OPTIONS	IS NOT INITIAL.
      LOOP AT IT_FILTER_SELECT_OPTIONS ASSIGNING FIELD-SYMBOL(<LS_FILTER>).
        IF SY-SUBRC = 0.
          CASE <LS_FILTER>-PROPERTY.
            WHEN C_GROUP_ID.
              READ TABLE <LS_FILTER>-SELECT_OPTIONS ASSIGNING FIELD-SYMBOL(<LS_SEL_OPT>) INDEX 1.
              IF SY-SUBRC = 0.
                LV_GROUP_ID = <LS_SEL_OPT>-LOW.
                UNASSIGN : <LS_SEL_OPT>.
              ENDIF.
            WHEN C_DAYS.
              READ TABLE <LS_FILTER>-SELECT_OPTIONS ASSIGNING <LS_SEL_OPT> INDEX 1.
              IF SY-SUBRC = 0.
                IF <LS_SEL_OPT>-LOW IS NOT INITIAL.
                  APPEND VALUE #( SIGN = 'I' OPTION  = 'BT' LOW =  ( SY-DATUM - <LS_SEL_OPT>-LOW ) HIGH = SY-DATUM ) TO R_DATA.
                ELSE.
                  APPEND VALUE #( SIGN = 'I' OPTION  = 'EQ' LOW = SY-DATUM ) TO R_DATA.
                ENDIF.
                UNASSIGN : <LS_SEL_OPT>.
              ENDIF.
          ENDCASE.
        ENDIF.
      ENDLOOP.
    ENDIF.
*** Checking for Group ID
    CHECK LV_GROUP_ID IS NOT INITIAL.
    SELECT
      EKPO~EBELN,
      SUM( EKPO~NETWR ) AS NETWR,
      SUM( EKPO~MENGE ) AS MENGE,
      EKKO~AEDAT,
      EKKO~ERNAM,
      EKKO~LIFNR,
      EKKO~USER_NAME,
      EKKO~ERDATE,
      EKKO~APPROVER1,
      EKKO~APPROVER1_DT,
      EKKO~APPROVER2,
      EKKO~APPROVER2_DT,
      EKKO~ZTRANNO,
      LFA1~NAME1
      INTO TABLE @DATA(LT_DATA)
      FROM KLAH AS KLAH
      INNER JOIN KSSK AS KSSK  ON KSSK~CLINT     = KLAH~CLINT
      INNER JOIN KLAH AS KLAH1 ON KSSK~OBJEK     = KLAH1~CLINT
      LEFT OUTER JOIN EKPO AS EKPO ON EKPO~MATKL = KLAH1~CLASS
      LEFT OUTER JOIN EKKO AS EKKO ON EKKO~EBELN = EKPO~EBELN
      LEFT OUTER JOIN LFA1 AS LFA1 ON EKKO~LIFNR = LFA1~LIFNR
      WHERE KLAH~KLART = '026' AND KLAH~CLASS = @LV_GROUP_ID AND EKPO~AEDAT IN @R_DATA AND BSART IN ( @C_ZLOC , @C_ZOSP )
      GROUP BY EKPO~EBELN, EKKO~AEDAT, EKKO~ERNAM, EKKO~LIFNR , LFA1~NAME1, EKKO~USER_NAME,
      EKKO~ERDATE, EKKO~APPROVER1,EKKO~APPROVER1_DT,EKKO~APPROVER2,EKKO~APPROVER2_DT,EKKO~ZTRANNO.

***  Get Error Data
    SELECT * FROM ZPO_STATUS INTO TABLE @DATA(LT_ERROR) WHERE GROUP_ID = @LV_GROUP_ID AND AEDAT IN @R_DATA.
    CHECK LT_DATA IS NOT INITIAL OR LT_ERROR IS NOT INITIAL .
    FIELD-SYMBOLS : <LS_DATA> LIKE LINE OF LT_DATA.
    SORT LT_DATA BY EBELN.
*** Success data
    LOOP AT LT_DATA ASSIGNING <LS_DATA>.
      APPEND VALUE #( ARDAT  = <LS_DATA>-AEDAT+6(2) && '.' && <LS_DATA>-AEDAT+4(2) && '.' && <LS_DATA>-AEDAT+0(4)
                      EBELN  = <LS_DATA>-EBELN ERNAM  = <LS_DATA>-ERNAM LIFNR  = <LS_DATA>-LIFNR NETWR = <LS_DATA>-NETWR MENGE = <LS_DATA>-MENGE
                      NAME1  = <LS_DATA>-NAME1 USER_NAME = <LS_DATA>-USER_NAME APPROVER1 = <LS_DATA>-APPROVER1 APPROVER2 = <LS_DATA>-APPROVER2
                      ERDATE = <LS_DATA>-ERDATE+6(2) && '.' && <LS_DATA>-ERDATE+4(2) && '.' && <LS_DATA>-ERDATE+0(4)
                      APPROVER2_DT = <LS_DATA>-APPROVER2_DT+6(2) && '.' && <LS_DATA>-APPROVER2_DT+4(2) && '.' && <LS_DATA>-APPROVER2_DT+0(4)
                      ZTRANNO = <LS_DATA>-ZTRANNO ) TO ET_ENTITYSET.
    ENDLOOP.
*** Error data
    LOOP AT LT_ERROR ASSIGNING FIELD-SYMBOL(<LS_ERROR>).
      APPEND VALUE #( ARDAT     = <LS_ERROR>-AEDAT+6(2) && '.' && <LS_ERROR>-AEDAT+4(2) && '.' && <LS_ERROR>-AEDAT+0(4) EBELN  = <LS_ERROR>-SNO
                      ERROR_MSG = <LS_ERROR>-ERROR_MSG ERNAM = <LS_ERROR>-ERNAM LIFNR = <LS_ERROR>-LIFNR ERROR_FLAG = C_X NETWR = <LS_ERROR>-NETWR
                      NAME1     = <LS_ERROR>-NAME1 MENGE = <LS_ERROR>-MENGE USER_NAME = <LS_ERROR>-USER_NAME APPROVER1 = <LS_ERROR>-APPROVER1
                      APPROVER2 = <LS_ERROR>-APPROVER2 ERDATE = <LS_ERROR>-ERDATE+6(2) && '.' && <LS_ERROR>-ERDATE+4(2) && '.' && <LS_ERROR>-ERDATE+0(4)
                      APPROVER2_DT = <LS_ERROR>-APPROVER2_DT+6(2) && '.' && <LS_ERROR>-APPROVER2_DT+4(2) && '.' && <LS_ERROR>-APPROVER2_DT+0(4)
                      ZTRANNO = <LS_ERROR>-ZTRANNO
                      ) TO ET_ENTITYSET.
    ENDLOOP.
  ENDMETHOD.
ENDCLASS.
