class ZCL_PO_ITEM_TAX definition
  public
  final
  create public .

public section.

  class-methods GET_PO_ITEM_TAX
    importing
      value(I_EBELN) type EBELN
      value(I_EBELP) type EBELP
      value(I_QUANTITY) type MENGE_D optional
      !I_NET_VAL type NETWR optional
    exporting
      !E_TAX type WMWST
      !E_TOTAL_VAL type NETWR .
protected section.
private section.
ENDCLASS.



CLASS ZCL_PO_ITEM_TAX IMPLEMENTATION.


  METHOD GET_PO_ITEM_TAX.

    CONSTANTS:
      C_BEST VALUE 'F',
      C_KONT VALUE 'K'.

    DATA :
      TAXCOM TYPE TAXCOM,
      T_KONV TYPE TABLE OF KOMV,
      TKOMV  TYPE TABLE OF KOMV,
      TKOMVD TYPE TABLE OF KOMVD,
      T_KOMK TYPE TABLE OF KOMK,
      KOMK   TYPE KOMK,
      KOMP   TYPE KOMP.

    SELECT SINGLE * FROM EKKO INTO @DATA(EKKO) WHERE EBELN = @I_EBELN.
    SELECT SINGLE * FROM EKPO INTO @DATA(EKPO) WHERE EBELN = @I_EBELN AND EBELP = @I_EBELP.
    SELECT SINGLE * FROM T001 INTO @DATA(T001) WHERE BUKRS = @EKKO-BUKRS .

    TAXCOM-BUKRS = EKPO-BUKRS.
    TAXCOM-BUDAT = EKKO-BEDAT.
    TAXCOM-WAERS = EKKO-WAERS.
    TAXCOM-KPOSN = EKPO-EBELP.
    TAXCOM-MWSKZ = EKPO-MWSKZ.
    TAXCOM-TXJCD = EKPO-TXJCD.
    TAXCOM-SHKZG = 'H'.
    TAXCOM-XMWST = 'X'.

    IF EKKO-BSTYP EQ C_BEST.
      TAXCOM-WRBTR = EKPO-NETWR.
    ELSE.
      TAXCOM-WRBTR = EKPO-ZWERT.
    ENDIF.

    TAXCOM-LIFNR = EKKO-LIFNR.
    TAXCOM-LAND1 = EKKO-LANDS.
    TAXCOM-EKORG = EKKO-EKORG.
    TAXCOM-HWAER = T001-WAERS.
    TAXCOM-LLIEF = EKKO-LLIEF.
    TAXCOM-BLDAT = EKKO-BEDAT.
    TAXCOM-MATNR = EKPO-EMATN.
    TAXCOM-WERKS = EKPO-WERKS.
    TAXCOM-BWTAR = EKPO-BWTAR.
    TAXCOM-MATKL = EKPO-MATKL.
    TAXCOM-MEINS = EKPO-MEINS.

    IF EKKO-BSTYP EQ C_BEST.
      TAXCOM-MGLME = EKPO-MENGE.
    ELSE.
      IF EKKO-BSTYP EQ C_KONT AND EKPO-ABMNG GT 0.
        TAXCOM-MGLME = EKPO-ABMNG.
      ELSE.
        TAXCOM-MGLME = EKPO-KTMNG.
      ENDIF.
    ENDIF.

    IF TAXCOM-MGLME EQ 0.
      TAXCOM-MGLME = 1000.
    ENDIF.

    TAXCOM-MTART = EKPO-MTART.

    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CALL FUNCTION 'J_1BSA_COMPONENT_ACTIVE'
      EXPORTING
        BUKRS                = EKKO-BUKRS
        COMPONENT            = 'BR'
      EXCEPTIONS
        COMPONENT_NOT_ACTIVE = 1
        OTHERS               = 2.

    IF SY-SUBRC IS INITIAL.

      KOMK-MANDT = EKKO-MANDT.
      KOMK-KALSM = EKKO-KALSM.

      IF EKKO-KALSM = ''.
        KOMK-KALSM = 'RM0000'.
      ENDIF.

      KOMK-KAPPL = 'M'.
      KOMK-WAERK = EKKO-WAERS.
      KOMK-KNUMV = EKKO-KNUMV.
      KOMK-LIFNR = EKKO-LIFNR.
      KOMP-KPOSN = EKPO-EBELP.
      KOMP-MATNR = EKPO-MATNR.
      KOMP-WERKS = EKPO-WERKS.
      KOMP-MATKL = EKPO-MATKL.
      KOMP-INFNR = EKPO-INFNR.
      KOMP-EVRTN = EKPO-KONNR.
      KOMP-EVRTP = EKPO-KTPNR.

      CALL FUNCTION 'RV_PRICE_PRINT_ITEM'
        EXPORTING
          COMM_HEAD_I = KOMK
          COMM_ITEM_I = KOMP
          LANGUAGE    = 'E'
        TABLES
          TKOMV       = TKOMV
          TKOMVD      = TKOMVD.

      CALL FUNCTION 'J_1B_NF_PO_DISCOUNTS'
        EXPORTING
          I_KALSM = EKKO-KALSM
          I_EKPO  = EKPO
        IMPORTING
          E_EKPO  = EKPO
        TABLES
          I_KONV  = T_KONV.

      IF NOT EKKO-LLIEF IS INITIAL.
        TAXCOM-LIFNR = EKKO-LLIEF.
      ENDIF.
    ENDIF.

    CALL FUNCTION 'FIND_TAX_SPREADSHEET'
      EXPORTING
        BUCHUNGSKREIS = T001-BUKRS
      EXCEPTIONS
        NOT_FOUND     = 1
        OTHERS        = 2.

    IF I_QUANTITY IS NOT INITIAL.
      TAXCOM-MGLME = I_QUANTITY.
      TAXCOM-WRBTR = I_QUANTITY * EKPO-NETPR.
    ENDIF.

    IF I_NET_VAL IS NOT INITIAL.
      TAXCOM-WRBTR = I_NET_VAL.
    ENDIF.

    CALL FUNCTION 'CALCULATE_TAX_ITEM'
      EXPORTING
        I_TAXCOM            = TAXCOM
      IMPORTING
        E_TAXCOM            = TAXCOM
      EXCEPTIONS
        MWSKZ_NOT_DEFINED   = 1
        MWSKZ_NOT_FOUND     = 2
        MWSKZ_NOT_VALID     = 3
        STEUERBETRAG_FALSCH = 4
        COUNTRY_NOT_FOUND   = 5
        OTHERS              = 6.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
    E_TAX = TAXCOM-WMWST.
    E_TOTAL_VAL = TAXCOM-WMWST + TAXCOM-WRBTR.
  ENDMETHOD.
ENDCLASS.
