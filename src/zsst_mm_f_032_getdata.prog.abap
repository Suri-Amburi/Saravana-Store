*&---------------------------------------------------------------------*
*& Include          ZSST_MM_F_032_GETDATA
*&---------------------------------------------------------------------*
START-OF-SELECTION.

*** Start of Changes by Suri  : 23.09.2019 22:46:00
  IF  P_DATE IS INITIAL.
    P_DATE = SY-DATUM.
  ENDIF.
*** End of Changes by Suri    : 23.09.2019 22:46:00

  SELECT EBELN
         AEDAT
         EKGRP
         BSART
  FROM EKKO
  INTO TABLE IT_EK
  WHERE AEDAT EQ P_DATE AND BSART IN ('ZLOP','ZOSP','ZTAT','ZVLO','ZOSP').

  IF IT_EK IS NOT INITIAL.
  SELECT A~EBELN
         A~AEDAT
         A~EKGRP
         A~BSART
         B~EBELP
         B~RETPO
         B~NETWR
         B~MENGE

  FROM   EKKO AS A INNER JOIN EKPO AS B ON ( A~EBELN EQ B~EBELN AND B~RETPO NE 'X' )
  INTO TABLE IT_EKKO
  FOR ALL ENTRIES IN IT_EK
  WHERE A~EBELN EQ IT_EK-EBELN.
 ENDIF.

  IF IT_EKKO IS NOT INITIAL.

    SELECT EBELN
           NETWR
           MENGE
    FROM   EKPO
    INTO TABLE IT_EKPO
    FOR ALL ENTRIES IN IT_EKKO
    WHERE EBELN = IT_EKKO-EBELN.

  ENDIF.

  SELECT EKGRP
         EKNAM
  FROM   T024
  INTO TABLE IT_T024
  WHERE EKGRP NE '001' AND
        EKGRP NE '002' AND
        EKGRP NE '003'.

  SELECT WERKS
         ADRNR
  FROM  T001W
  INTO TABLE IT_T001W
  WHERE WERKS IN ('SSCP','SSPO','SSPU','SSTN').

  SELECT A~ADDRNUMBER
         A~NAME1
         A~NAME2
         A~STREET
         A~STR_SUPPL1
         A~CITY1
         A~POST_CODE1
         B~BEZEI
  FROM   ADRC AS A
  INNER JOIN T005U AS B ON ( A~REGION = B~BLAND AND SPRAS = SY-LANGU )
  INTO TABLE IT_ADRC
  FOR ALL ENTRIES IN IT_T001W
  WHERE ADDRNUMBER = IT_T001W-ADRNR .

  LOOP AT IT_T001W INTO WA_T001W.
    READ TABLE IT_ADRC INTO WA_ADRC WITH KEY ADDRNUMBER = WA_T001W-ADRNR.
    IF SY-SUBRC = 0.
      MOVE WA_ADRC-ADDRNUMBER    TO WA_ADR-ADDRNUMBER.
      MOVE WA_ADRC-NAME1         TO WA_ADR-NAME1     .
      MOVE WA_ADRC-NAME2         TO WA_ADR-NAME2     .
      MOVE WA_ADRC-STREET        TO WA_ADR-STREET    .
      MOVE WA_ADRC-STR_SUPPL1    TO WA_ADR-STR_SUPPL1.
      MOVE WA_ADRC-CITY1         TO WA_ADR-CITY1     .
      MOVE WA_ADRC-POST_CODE1    TO WA_ADR-POST_CODE1.
      MOVE WA_ADRC-BEZEI         TO WA_ADR-BEZEI     .
      MOVE WA_T001W-WERKS        TO WA_ADR-WERKS     .
    ENDIF.
  ENDLOOP.



  LOOP AT IT_T024 INTO WA_T024.
    SR_NO          = SR_NO + 1 .
    WA_FINAL-SR_NO = SR_NO .

    LOOP AT IT_EKKO INTO WA_EKKO WHERE EKGRP = WA_T024-EKGRP.
      WA_FINAL-OR_QTY = WA_FINAL-OR_QTY + WA_EKKO-MENGE.
      WA_FINAL-NTWR   = WA_FINAL-NTWR + WA_EKKO-NETWR.
    ENDLOOP.

    LOOP AT IT_EK INTO WA_EK WHERE EKGRP = WA_T024-EKGRP.
      WA_FINAL-NO_PO  = WA_FINAL-NO_PO + 1.
    ENDLOOP.

    MOVE WA_T024-EKNAM TO WA_FINAL-GROUP.
    TOT_QTY  = TOT_QTY  + WA_FINAL-OR_QTY.
    TOT_NTWR = TOT_NTWR + WA_FINAL-NTWR.
    TOT_PO   = TOT_PO   + WA_FINAL-NO_PO.

    APPEND WA_FINAL TO IT_FINAL.
    CLEAR : WA_FINAL.

  ENDLOOP.
