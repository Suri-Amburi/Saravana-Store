FUNCTION ZIN_MATERIAL_COPY .
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(IM_DATE_FROM) TYPE  SY-DATUM OPTIONAL
*"     VALUE(IM_DATE_TO) TYPE  SY-DATUM OPTIONAL
*"     VALUE(GROUP_ID) TYPE  KLASSE_D OPTIONAL
*"  EXPORTING
*"     VALUE(ET_DISPLAY) TYPE  ZEX_MAT_TT
*"--------------------------------------------------------------------

  TYPES : BEGIN OF TY_KLAH ,
            CLINT TYPE CLINT,
            KLART TYPE KLASSENART,
            CLASS TYPE KLASSE_D,
            VONDT TYPE VONDAT,
            BISDT TYPE BISDAT,
            WWSKZ TYPE KLAH-WWSKZ,
          END OF TY_KLAH .

  TYPES : BEGIN OF TY_KLAH1 ,
            CLINT TYPE CLINT,
            KLART TYPE KLASSENART,
            CLASS TYPE MATKL,
            VONDT TYPE VONDAT,
            BISDT TYPE BISDAT,
            WWSKZ TYPE KLAH-WWSKZ,
          END OF TY_KLAH1 .

  TYPES : BEGIN OF TY_KSSK ,
            OBJEK TYPE CUOBN,
            MAFID TYPE KLMAF,
            KLART TYPE KLASSENART,
            CLINT TYPE CLINT,
            ADZHL TYPE ADZHL,
            DATUB TYPE DATUB,
          END OF TY_KSSK .

  TYPES : BEGIN OF TY_KSSK1 ,
            OBJEK TYPE CLINT,
          END OF TY_KSSK1 .

  DATA : IT_KLAH  TYPE TABLE OF TY_KLAH,
         WA_KLAH  TYPE TY_KLAH,
         IT_KLAH1 TYPE TABLE OF TY_KLAH1,
         WA_KLAH1 TYPE TY_KLAH1,
         IT_KSSK1 TYPE TABLE OF TY_KSSK1,
         WA_KSSK1 TYPE TY_KSSK1,
         IT_KSSK  TYPE TABLE OF TY_KSSK,
         WA_KSSK  TYPE TY_KSSK.

  DATA :WA_MAT         TYPE ZMAT_DISP,
        WA_BAPIRET2_TT TYPE BAPIRET2_TT,
*        IT_MARA        TYPE TABLE OF TY_MARA,
        LS_DATE        TYPE RANGE_DATE,
        IT_O_WGH01     TYPE TABLE OF WGH01,
        WA_O_WGH01     TYPE WGH01.


  CONSTANTS : C_M(1) VALUE 'M'.

  SELECT SINGLE CLINT
             KLART
             CLASS
             VONDT
             BISDT
             WWSKZ FROM KLAH INTO WA_KLAH
             WHERE WWSKZ = '0'
             AND KLART = '026'
             AND CLASS = GROUP_ID .

  IF WA_KLAH IS NOT INITIAL.
    SELECT OBJEK
           MAFID
           KLART
           CLINT
           ADZHL
           DATUB FROM KSSK INTO TABLE IT_KSSK
            WHERE CLINT = WA_KLAH-CLINT.


  ENDIF.

  LOOP AT IT_KSSK INTO WA_KSSK .
    SHIFT WA_KSSK-OBJEK LEFT DELETING LEADING '0'.
    WA_KSSK1-OBJEK = WA_KSSK-OBJEK .
    APPEND WA_KSSK1 TO IT_KSSK1 .
    CLEAR WA_KSSK1 .
  ENDLOOP.

  IF IT_KSSK1 IS NOT INITIAL .
    SELECT CLINT
           KLART
           CLASS
           VONDT
           BISDT
           WWSKZ FROM KLAH INTO TABLE IT_KLAH
           FOR ALL ENTRIES IN IT_KSSK1
           WHERE CLINT = IT_KSSK1-OBJEK
            AND WWSKZ = '1'.
  ENDIF.



  CHECK IT_KLAH[] IS NOT INITIAL.
  IT_KLAH1[] = IT_KLAH[] .
*** Start of Chnges By Suri : 09.01.2020
  SELECT MARA~MATKL , MARA~MATNR  FROM MARA AS MARA
     INTO TABLE @DATA(IT_MARA)
      FOR ALL ENTRIES IN @IT_KLAH1
      WHERE MATKL = @IT_KLAH1-CLASS
      AND ( ( ERSDA BETWEEN @IM_DATE_FROM AND @IM_DATE_TO ) OR ( LAEDA BETWEEN @IM_DATE_FROM AND @IM_DATE_TO ) ) AND  MARA~MATKL NOT LIKE 'B1%'.
*** End of Changes by Suri : 09.01.2020

  IF IT_MARA IS NOT INITIAL .

    SELECT MARA~MATNR ,
           MARA~SATNR ,
           MARA~PRDHA ,
           MARA~MEINS ,
           MARA~BSTME ,
           MARA~EAN11 ,
           MARA~BRGEW ,
           MARA~NTGEW ,
           MARA~BRAND_ID ,
           MARA~ATTYP ,
           MARA~LAEDA ,
           MARA~MATKL ,
           MARA~COLOR ,
           MARA~SIZE1 ,
           MARA~ZZPRICE_FRM ,
           MARA~ZZPRICE_TO ,
           MARA~ZZARTICLE,
           MARA~ZZPO_ORDER_TXT,
           MAKT~MAKTX ,
           MAST~STLNR ,
           T023T~WGBEZ60
          INTO TABLE @DATA(LT_ITEM)
          FROM MARA AS MARA
*          LEFT OUTER JOIN MARA AS MARA ON MARA~MATNR = A502~MATNR
          LEFT OUTER JOIN MAKT AS MAKT ON MAKT~MATNR = MARA~MATNR
*          LEFT OUTER JOIN KONP AS KONP ON KONP~KNUMH = A502~KNUMH
          LEFT OUTER JOIN MAST AS MAST ON MAST~MATNR = MARA~MATNR
          LEFT OUTER JOIN T023T AS T023T ON T023T~MATKL = MARA~MATKL
          FOR ALL ENTRIES IN @IT_MARA
          WHERE MARA~MATKL = @IT_MARA-MATKL  AND MARA~MATNR = @IT_MARA-MATNR
          AND   MARA~MSTAE = ' ' .
  ENDIF .
  IF LT_ITEM IS NOT INITIAL.
********FOR Brand ID
    SELECT
     A502~KAPPL ,
     A502~KSCHL ,
     A502~LIFNR ,
     A502~MATNR ,
     A502~KFRST ,
     A502~DATBI ,
     A502~DATAB ,
     A502~KNUMH ,
     KONP~KBETR  INTO TABLE @DATA(IT_BRAND)
      FROM A502 AS A502
      INNER JOIN KONP AS KONP ON KONP~KNUMH = A502~KNUMH AND A502~DATBI GE @SY-DATUM AND A502~DATAB LE @SY-DATUM
      FOR ALL ENTRIES IN @LT_ITEM
      WHERE A502~MATNR = @LT_ITEM-MATNR
      AND   A502~KSCHL = 'PB00'
      AND   KONP~LOEVM_KO = ' ' .
  ENDIF .
*****for MRP
  IF IT_MARA IS NOT INITIAL .
    SELECT
       A515~KSCHL ,
       A515~MATNR ,
       A515~KNUMH FROM A515 INTO TABLE @DATA(IT_A515)
                  FOR ALL ENTRIES IN @IT_MARA
                  WHERE MATNR = @IT_MARA-MATNR
                  AND KSCHL = 'ZMRP' AND A515~DATBI GE @SY-DATUM AND A515~DATAB LE @SY-DATUM.
  ENDIF.
****FOR MRP PRICE
  IF IT_A515 IS NOT INITIAL .
    SELECT
      KONP~KBETR ,
      KONP~KNUMH  FROM KONP INTO TABLE @DATA(IT_MRP)
                  FOR ALL ENTRIES IN @IT_A515
                  WHERE KNUMH = @IT_A515-KNUMH AND KONP~LOEVM_KO = ' ' .
  ENDIF .


  IF LT_ITEM IS NOT INITIAL .
***  Getting BOM Componets for SET Material
    SELECT  MAST~MATNR,
            MAST~WERKS,
            MAST~STLNR,
            MAST~STLAL,
            STPO~STLKN,
            STPO~IDNRK,
            STPO~POSNR,
            STPO~MENGE,
            STPO~MEINS,
            MARA~SIZE1
            INTO TABLE @DATA(IT_SIZE)
            FROM MAST AS MAST
            INNER JOIN STPO AS STPO ON STPO~STLTY = @C_M AND MAST~STLNR = STPO~STLNR
            INNER JOIN MARA AS MARA ON MARA~MATNR = STPO~IDNRK
            FOR ALL ENTRIES IN @LT_ITEM
            WHERE MAST~MATNR = @LT_ITEM-MATNR.

  ENDIF.
  DATA(LT_ITEM1) = LT_ITEM[] .
  SORT LT_ITEM DESCENDING BY  MATNR .
*  DELETE ADJACENT DUPLICATES FROM LT_ITEM COMPARING MATNR .
  LOOP AT LT_ITEM ASSIGNING FIELD-SYMBOL(<LS_ITEM>).

*    WA_MAT-SUPPLIER_ID      =   <LS_ITEM>-LIFNR  .
    WA_MAT-SSTCODE           =   <LS_ITEM>-SATNR  .
    WA_MAT-EAN11             =   <LS_ITEM>-EAN11.
    WA_MAT-CHILD_CODE        =   <LS_ITEM>-MATNR  .
    WA_MAT-CATEGORY_ID       =   <LS_ITEM>-MATKL  .
    WA_MAT-ITEM_NAME         =   <LS_ITEM>-ZZPO_ORDER_TXT .
    WA_MAT-COLOR             =   <LS_ITEM>-COLOR  .
    WA_MAT-BRAND_ID          =   <LS_ITEM>-BRAND_ID  .
    WA_MAT-PARENT            =   <LS_ITEM>-ZZARTICLE  .
    WA_MAT-CHILD             =   <LS_ITEM>-WGBEZ60  .
    WA_MAT-UOM               =   <LS_ITEM>-MEINS  .
    WA_MAT-GROUP_ID          =    WA_KLAH-CLASS.
    WA_MAT-FROM_PRICE        =   <LS_ITEM>-ZZPRICE_FRM  .
    WA_MAT-TO_PRICE          =   <LS_ITEM>-ZZPRICE_TO  .

*** Start of Changes Suri : Ordering Unit : 10.01.2020
    IF <LS_ITEM>-BSTME IS INITIAL.
      WA_MAT-UOM            =   <LS_ITEM>-MEINS.
    ELSE.
      WA_MAT-UOM            =   <LS_ITEM>-BSTME.
    ENDIF.
*** End of Changes Suri : Ordering Unit : 10.01.2020

    READ TABLE LT_ITEM1 ASSIGNING FIELD-SYMBOL(<WA_NBRAND>) WITH KEY MATNR = <LS_ITEM>-MATNR .
*                                                                    BRAND_ID = ' '.
    IF <WA_NBRAND>-BRAND_ID IS INITIAL.

      WA_MAT-FROM_PRICE     =  <LS_ITEM>-ZZPRICE_FRM.
      WA_MAT-TO_PRICE       =  <LS_ITEM>-ZZPRICE_TO.

*        ENDIF.
    ELSEIF <WA_NBRAND>-BRAND_ID IS NOT INITIAL.

      READ TABLE IT_BRAND ASSIGNING FIELD-SYMBOL(<LS_BRAND>) WITH KEY MATNR = <LS_ITEM>-MATNR KSCHL = 'PB00' .

      IF SY-SUBRC = 0.
        WA_MAT-FROM_PRICE     =  <LS_BRAND>-KBETR.
        WA_MAT-TO_PRICE       =  <LS_BRAND>-KBETR.
      ENDIF.

      READ TABLE IT_A515 ASSIGNING FIELD-SYMBOL(<LS_A515>) WITH KEY MATNR = <LS_ITEM>-MATNR .""KSCHL = 'ZMRP'.

      IF SY-SUBRC = 0.
        IF <LS_A515>-KSCHL = 'ZMRP'.
          READ TABLE IT_MRP ASSIGNING FIELD-SYMBOL(<LS_MRP>) WITH KEY KNUMH =  <LS_A515>-KNUMH .
          WA_MAT-MRP            =  <LS_MRP>-KBETR.
        ENDIF.
      ENDIF.
    ENDIF.

    READ TABLE IT_SIZE ASSIGNING FIELD-SYMBOL(<LS_SIZE>) WITH KEY MATNR = <LS_ITEM>-MATNR   .
    IF SY-SUBRC = 0.
      LOOP AT IT_SIZE ASSIGNING <LS_SIZE> WHERE STLNR = <LS_SIZE>-STLNR.
        IF  WA_MAT-SIZE IS INITIAL.
          WA_MAT-SIZE = <LS_SIZE>-SIZE1.
        ELSE.
          WA_MAT-SIZE = WA_MAT-SIZE && '-' && <LS_SIZE>-SIZE1.
        ENDIF.
      ENDLOOP.
    ELSE.
      WA_MAT-SIZE =  <LS_ITEM>-SIZE1.
    ENDIF.

    READ TABLE IT_MARA ASSIGNING FIELD-SYMBOL(<WA_MATKL>) WITH KEY  MATNR  = <LS_ITEM>-MATNR .
    IF SY-SUBRC = 0 .
      IF WA_MAT-SSTCODE IS INITIAL.
        WA_MAT-SSTCODE = WA_MAT-CHILD_CODE.
      ENDIF.
      APPEND WA_MAT TO ET_DISPLAY .
      CLEAR WA_MAT .
    ELSEIF GROUP_ID IS INITIAL .
      IF WA_MAT-SSTCODE IS INITIAL.
        WA_MAT-SSTCODE = WA_MAT-CHILD_CODE.
      ENDIF.
      APPEND WA_MAT TO ET_DISPLAY .
      CLEAR WA_MAT .
    ENDIF .
  ENDLOOP .


ENDFUNCTION.
