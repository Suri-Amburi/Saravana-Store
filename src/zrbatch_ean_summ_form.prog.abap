*&---------------------------------------------------------------------*
*& Include          ZRBATCH_EAN_SUMM_FORM
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form GETDATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM GETDATA .
*   if s_plant is NOT INITIAL."s_plant.
  SELECT SNO
         SCAN_BATCH
         PLANT
         CREATEDON FROM ZSCAN_BATCHES
         INTO TABLE IT_ZSCAN_BATCHES
         WHERE PLANT = S_PLANT AND CREATEDON IN S_DATE.
*endif.

  LOOP AT IT_ZSCAN_BATCHES INTO WA_ZSCAN_BATCHES.
    WA_BATCHES-BATCH1 = WA_ZSCAN_BATCHES-SCAN_BATCH.
    SHIFT WA_ZSCAN_BATCHES-SCAN_BATCH LEFT DELETING LEADING '0'.
    WA_BATCHES-BATCH = WA_ZSCAN_BATCHES-SCAN_BATCH.
    WA_BATCHES-BATCH18 = WA_ZSCAN_BATCHES-SCAN_BATCH.
    WA_BATCHES-PLANT = WA_ZSCAN_BATCHES-PLANT.
    WA_BATCHES-QTY = 1.
    WA_BATCHES-CREATEDON = WA_ZSCAN_BATCHES-CREATEDON.
    APPEND WA_BATCHES TO IT_BATCHES.
    CLEAR : WA_BATCHES.

  ENDLOOP.

  SELECT MATNR
         CHARG
         EBRID
         WERKS FROM MCHP
        INTO TABLE IT_MCHP
        FOR ALL ENTRIES IN IT_BATCHES
       WHERE CHARG = IT_BATCHES-BATCH AND WERKS = S_PLANT.

*    if it_mchp is INITIAL.
*
*      ENDIF.

  IF IT_BATCHES IS NOT INITIAL.
    SELECT MATNR
           ERSDA
           MTART
           MATKL
           MEINS
           EAN11
           FROM MARA INTO TABLE IT_MARA
           FOR ALL ENTRIES IN IT_MCHP
           WHERE MATNR =  IT_MCHP-MATNR .
  ENDIF.

  IF IT_MCHP IS INITIAL.

    SELECT MATNR
         ERSDA
         MTART
         MATKL
         MEINS
         EAN11
         FROM MARA INTO TABLE IT_MARA
         FOR ALL ENTRIES IN IT_BATCHES
         WHERE EAN11 = IT_BATCHES-BATCH18 AND ERSDA = IT_BATCHES-CREATEDON .

  ENDIF.

  IF IT_MARA IS NOT INITIAL.
    SELECT MATNR
           SPRAS
           MAKTX
          FROM MAKT INTO TABLE IT_MAKT
          FOR ALL ENTRIES IN IT_MARA
          WHERE MATNR = IT_MARA-MATNR.
  ENDIF.
  IF IT_MARA IS NOT INITIAL.
    SELECT
          SPRAS
          MATKL
          WGBEZ FROM T023T
          INTO TABLE IT_T023T
          FOR ALL ENTRIES IN IT_MARA
          WHERE MATKL = IT_MARA-MATKL.
*          ENDIF.

    SELECT KAPPL
           KSCHL
           WERKS
           MATNR
           KNUMH FROM A406
           INTO TABLE IT_A406
           FOR ALL ENTRIES IN IT_MARA
           WHERE MATNR = IT_MARA-MATNR AND KSCHL = 'ZEAN'.
  ENDIF.

  IF IT_A406 IS NOT INITIAL.
    SELECT KNUMH
           KOPOS
           KBETR FROM KONP
           INTO TABLE IT_KONP
           FOR ALL ENTRIES IN IT_A406
           WHERE KNUMH = IT_A406-KNUMH.
  ENDIF.


  DATA(T023T_3) = IT_T023T[].
  LOOP AT T023T_3 ASSIGNING FIELD-SYMBOL(<WA_T023T_3>).
    WA_T023T_1-MATKL = <WA_T023T_3>-MATKL.
    APPEND WA_T023T_1 TO IT_T023T_1.
    CLEAR : WA_T023T_1.
  ENDLOOP.

  IF IT_T023T_1 IS NOT INITIAL.
    SELECT CLINT
           KLART
           CLASS
           FROM KLAH INTO TABLE IT_KLAH
          FOR ALL ENTRIES IN IT_T023T_1
         WHERE CLASS = IT_T023T_1-MATKL .
  ENDIF.

  LOOP AT IT_KLAH ASSIGNING FIELD-SYMBOL(<WA_KLAHH>).
    WA_KSSK1-OBJEK = <WA_KLAHH>-CLINT.
    APPEND WA_KSSK1 TO IT_KSSK1.
    CLEAR : WA_KSSK1.
  ENDLOOP.

  SELECT OBJEK
        MAFID
        KLART
        CLINT
        FROM KSSK
        INTO TABLE IT_KSSK
        FOR ALL ENTRIES IN IT_KSSK1
        WHERE OBJEK = IT_KSSK1-OBJEK.

  SELECT CLINT
         KLART
         CLASS
         FROM KLAH
        INTO TABLE IT_KLAH2
        FOR ALL ENTRIES IN IT_KSSK
        WHERE CLINT = IT_KSSK-CLINT.

  LOOP AT IT_BATCHES INTO WA_BATCHES.
    WA_FINAL-BATCH = WA_BATCHES-BATCH1.
    WA_FINAL-QTY = WA_BATCHES-QTY.
    READ TABLE IT_MCHP INTO WA_MCHP WITH KEY CHARG = WA_BATCHES-BATCH  WERKS = S_PLANT.
    IF IT_MCHP IS NOT INITIAL.
    READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_MCHP-MATNR.
    IF SY-SUBRC = 0.
      WA_FINAL-MATERIAL = WA_MARA-MATNR.
      WA_FINAL-UOM = WA_MARA-MEINS.
    ENDIF.
    ELSE.
      READ TABLE IT_MARA INTO WA_MARA WITH KEY EAN11 = WA_BATCHES-BATCH18.
    IF SY-SUBRC = 0.
      WA_FINAL-MATERIAL = WA_MARA-MATNR.
      WA_FINAL-UOM = WA_MARA-MEINS.
    ENDIF.
    ENDIF.
    READ TABLE IT_MAKT  INTO WA_MAKT WITH KEY MATNR = WA_MARA-MATNR.
    IF SY-SUBRC = 0.
      WA_FINAL-MAT_DESC = WA_MAKT-MAKTX.
    ENDIF.
    READ TABLE IT_T023T INTO WA_T023T WITH KEY MATKL = WA_MARA-MATKL.
    WA_FINAL-CATEGORY = WA_T023T-WGBEZ.
    WA_FINAL-MATKL_L = WA_T023T-MATKL.
    READ TABLE IT_A406  INTO WA_A406 WITH KEY MATNR = WA_MARA-MATNR KSCHL = 'ZEAN'.
    READ TABLE IT_KONP  INTO WA_KONP WITH KEY KNUMH = WA_A406-KNUMH.
    WA_FINAL-PRICE = WA_KONP-KBETR.
    READ TABLE IT_KLAH INTO WA_KLAH WITH KEY CLASS = WA_FINAL-MATKL_L .
    WA_FINAL-OBJ_L = WA_KLAH-CLINT.
    READ TABLE IT_KSSK INTO WA_KSSK WITH KEY OBJEK = WA_FINAL-OBJ_L.
    READ TABLE IT_KLAH2 INTO WA_KLAH2 WITH KEY CLINT = WA_KSSK-CLINT.
    WA_FINAL-GROUP = WA_KLAH2-CLASS.

    APPEND WA_FINAL TO IT_FINAL.
    CLEAR : WA_FINAL.

    DATA(IT_FINAL1) = IT_FINAL[].

    DELETE ADJACENT DUPLICATES FROM IT_FINAL1 COMPARING BATCH.
    LOOP AT IT_FINAL1 ASSIGNING FIELD-SYMBOL(<WA_FINAL1>).
      IF SY-SUBRC = 0.
      LOOP AT IT_FINAL ASSIGNING FIELD-SYMBOL(<W_FINAL1>) WHERE BATCH = <WA_FINAL1>-BATCH.
        IF SY-SUBRC = 0.
       WA_FINAL2-BATCH = <W_FINAL1>-BATCH.
       WA_FINAL2-QTY = WA_FINAL2-QTY + <W_FINAL1>-QTY.
       WA_FINAL2-MATERIAL = <W_FINAL1>-MATERIAL.
       WA_FINAL2-UOM = <W_FINAL1>-UOM.
       WA_FINAL2-MAT_DESC = <W_FINAL1>-MAT_DESC.
       WA_FINAL2-CATEGORY = <W_FINAL1>-CATEGORY.
       WA_FINAL2-MATKL_L = <W_FINAL1>-MATKL_L.
       WA_FINAL2-PRICE = <W_FINAL1>-PRICE.
*      *WA_FINAL2-OBJ_L = <W_FINAL1>-OBJ_L.
       WA_FINAL2-GROUP = <W_FINAL1>-GROUP.

          APPEND WA_FINAL2 TO IT_FINAL2.
          CLEAR : WA_FINAL2.
        ENDIF.
        ENDLOOP.
        ENDIF.
      ENDLOOP.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form DISPLAY
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DISPLAY .
  DATA: IT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
        WA_FIELDCAT TYPE SLIS_FIELDCAT_ALV.

  WA_FIELDCAT-FIELDNAME = 'BATCH'.
  WA_FIELDCAT-SELTEXT_L =  'BATCH/EAN'.
  WA_FIELDCAT-OUTPUTLEN = 20.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR   WA_FIELDCAT  .

  WA_FIELDCAT-FIELDNAME = 'MATERIAL'.
  WA_FIELDCAT-SELTEXT_L =  'MATERIAL'.
  WA_FIELDCAT-OUTPUTLEN = 20.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR   WA_FIELDCAT  .

  WA_FIELDCAT-FIELDNAME = 'MAT_DESC'.
  WA_FIELDCAT-SELTEXT_L =  'MATERIAL DESCRIPTION'.
  WA_FIELDCAT-OUTPUTLEN = 30.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR   WA_FIELDCAT  .

  WA_FIELDCAT-FIELDNAME = 'CATEGORY'.
  WA_FIELDCAT-SELTEXT_L =  'CATEGORY DESCRIPTION'.
  WA_FIELDCAT-OUTPUTLEN = 30.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR   WA_FIELDCAT  .

  WA_FIELDCAT-FIELDNAME = 'GROUP'.
  WA_FIELDCAT-SELTEXT_L =  'GROUP DESCRIPTION'.
  WA_FIELDCAT-OUTPUTLEN = 30.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR   WA_FIELDCAT  .

  WA_FIELDCAT-FIELDNAME = 'QTY'.
  WA_FIELDCAT-SELTEXT_L =  'QUANTITY'.
  WA_FIELDCAT-OUTPUTLEN = 15.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR   WA_FIELDCAT  .

  WA_FIELDCAT-FIELDNAME = 'UOM'.
  WA_FIELDCAT-SELTEXT_L =  'UOM'.
  WA_FIELDCAT-OUTPUTLEN = 5.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR   WA_FIELDCAT  .

  WA_FIELDCAT-FIELDNAME = 'PRICE'.
  WA_FIELDCAT-SELTEXT_L =  'TOTAL VALUE'.
  WA_FIELDCAT-OUTPUTLEN = 20.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.
  CLEAR   WA_FIELDCAT  .

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK  = ' '
*     I_BYPASSING_BUFFER = ' '
*     I_BUFFER_ACTIVE    = ' '
      I_CALLBACK_PROGRAM = SY-REPID
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME   =
*     I_BACKGROUND_ID    = ' '
*     I_GRID_TITLE       =
*     I_GRID_SETTINGS    =
*     IS_LAYOUT          =
      IT_FIELDCAT        = IT_FIELDCAT
*     IT_EXCLUDING       =
*     IT_SPECIAL_GROUPS  =
*     IT_SORT            =
*     IT_FILTER          =
*     IS_SEL_HIDE        =
*     I_DEFAULT          = 'X'
*     I_SAVE             = ' '
*     IS_VARIANT         =
*     IT_EVENTS          =
*     IT_EVENT_EXIT      =
*     IS_PRINT           =
*     IS_REPREP_ID       =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE  = 0
*     I_HTML_HEIGHT_TOP  = 0
*     I_HTML_HEIGHT_END  = 0
*     IT_ALV_GRAPHICS    =
*     IT_HYPERLINK       =
*     IT_ADD_FIELDCAT    =
*     IT_EXCEPT_QINFO    =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER           =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      T_OUTTAB           = IT_FINAL2
    EXCEPTIONS
      PROGRAM_ERROR      = 1
      OTHERS             = 2.
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.





ENDFORM.
